the following is a conversation with stephen wolfram his fourth time on this podcast he's a computer scientist mathematician theoretical physicist and the founder of wolfram research a company behind mathematica wolfram alpha wolfram language and the wolfram physics and metamathematics projects he has been a pioneer in exploring the computational nature of reality and so he's the perfect person to explore with together the new quickly evolving landscape of large language models as human civilization journeys towards building superintelligent agi and now a quick few second mention of each sponsor check them out in the description it's the best way to support this podcast we got master class for learning betterhelp for mental health and insighttracker for tracking your biological data choose wisely my friends also if you want to work with our amazing team we're always hiring go to lex fredeman dot com slash hiring and now onto the full ad reads as always no ads in the middle i try to make this interesting but if you must skip them friends please still check out the sponsors i enjoy their stuff maybe you will too this show is brought to you by masterclass one hundred and eighty bucks a year gets you an all access pass to watch courses from the best people in the world in their respective disciplines there's several components to effective learning i think learning the foundations is really important and the best way to do that depending on the field is probably some kind of material that encapsulates the foundations it could be textbook it could be a a really good youtube video a really good tutorial whether written or video form then there's the actual practice of those foundations by building something again depends on the field but i think a component of learning that's often not utilized is to learn from the best people in the world that did that thing you're trying to learn i think even if they don't cover the entirety of the foundations even if they don't cover a kinda hands on tutorial type of description that you can get elsewhere through their words you can get the wisdom of the details that mastering that field requires and you can also see kind of take in the mode of being required to achieve mastery in that field i think it's so powerful that master class allows you to look in to some of these world experts in a structured context really intensely learn from them not just the content but the way of being i listen to so many of them it's too long to list but carlos santana will wright daniel negreanu before i did the podcast with him i mean these are all just really excellent jane goodall if you wanna check it out go to master class dot com slash lex to get up to thirty five percent off for mother's day that's master class dot com slash lex for up to thirty five percent off this episode is also brought to you by betterhelp spelled h e l p help i posted this meme on twitter recently that has that meme format where the car swerves off on an exit and going straight means going to a therapist and swerving off onto an exit says saying in quotes it is what it is and then the car is labeled as most men it's true i think a lot of us face hardship in life and i think there's a dance between kind of being fragile to the richness of the experience of that hardship can really break you so there's some usefulness to it is what it is but afterwards or during it there has to be some component where you're raw and honest with your feelings and you bring them to the surface with yourself you introspect what you think what you feel what you fear what you hope it is so simple but so many of us are afraid of the simplicity of that intense feeling that our mind is capable of that roller coaster that our mind takes us on so i think therapy bringing stuff to the surface with a licensed professional is definitely something i recommend mental health is at the core of what it means to be a healthy human being and betterhelp is easy discreet affordable and it's available everywhere check them out at better help dot com slash lex and save on your first month that's better help dot com slash lex this show is also brought to you by insidetracker a service i use to track biological data markers from my biology from the blood test they take it looks at blood data dna data fitness tracker data all that kind of data coming from my body to help me make decisions about my lifestyle the more conversations i've had with biologists computational biologists biochemists bioengineers neurobiologists so people specialize in particular systems within the body virologists immunologists all of that i realize how incredible the human body is how incredible the machinery of it is and how many signals it provides internally for that large scale hierarchical system to maintain equilibrium to maintain health to maintain life in the full definition of those words and i think it's a really exciting possibility in the future that we can get as much of that signal as possible richly temporal signal every second of every moment from every system within the body and help us make predictions about where stuff goes wrong helps gives us advice on what we should do and so i think services like insidetracker is a really important step into that direction get special savings for a limited time when you go to insight tracker dot com slash lex this is the lex fridman podcast to support it please check out our sponsors in the description and now dear friends here's stephen wolfram you've announced the integration of chatgpt and wolfram alpha and wolfram language so let's talk about that integration what are the key differences from the high philosophical level maybe the technical level between the capabilities of broadly speaking the two kinds of systems large language models and this computational gigantic computational system infrastructure that is wolfram alpha yeah so what does something like chatgpt do it's it's mostly focused on make language like the language that humans have made and put on the web and so on yeah so you know it's its primary sort of underlying technical thing is you've given a prompt it's trying to continue that prompt in a way that's somehow typical of what it's seen based on a trillion words of text that humans have written on the web and the way it's doing that is with something which is probably quite similar to the way we humans do the first stages of that using a neural net and so on and just saying given these given this piece of text let's ripple through the neural net one word and and get one word at a time of output and it's kind of a a shallow computation on a large amount of kind of training data that is what we humans have put on the web that's a different thing from sort of the computational stack that i've spent the last i don't know forty years or so building which has to do with what can you compute many steps potentially a very deep computation it's not sort of taking the statistics of what we humans have produced and trying to continue things based on that statistics instead it's trying to take kind of the formal structure that we've created in our civilization whether it's from mathematics or whether it's from kind of systematic knowledge of all kinds and use that to do arbitrarily deep computations to figure out things that aren't just let's match what's already been kind of said on the web but let's potentially be able to compute something new and different that's never been computed before so as a as a practical matter you know the the what we're you know the our goal is to have made as much as possible of the world computable in the sense that if there's a question that in principle is answerable from some sort of expert knowledge that's been accumulated we can compute the answer to that question and we can do it in a sort of reliable way that's the best one can do given what the expertise that our civilization has accumulated it's a very it's a it's a much more sort of labor intensive on the side of kind of being creating kind of the the computational system to do that obviously the in in the the kind of the chat gbt world it's like take things which were produced for quite other purposes namely the all the things we've written out on the web and so on and sort of forage from that things which were are like what's been written on the web so i think you know as a as a practical point of view i i view sort of the chat gpt thing as being wide and shallow and what we're trying to do with sort of building out computation as being this sort of deep also broad but but most importantly kind of deep type of thing i think another way to think about this is if you go back in human history you know i don't know a thousand years or something and you say what what what can the typical person what's the typical person going to figure out well the answer is there are certain kinds of things that we humans can quickly figure out that's sort of what what our you know our neural architecture and the kinds of things we learn in our lives let us do but then there's this whole layer of kind of formalization that got developed in which is you know the kind of whole sort of story of intellectual history and whole kind of depth of learning that formalization turned into things like logic mathematics science and so on and that's the kind of thing that allows one to kind of build these towers of of of of sort of towers of things you work out it's not just i can immediately figure this out it's no i can use this kind of formalism to go step by step and work out something which was not immediately obvious to me and that's kind of the story of what what we're trying to do computationally is to be able to build those kind of tall towers of what implies what implies what and so on and as opposed to kind of the yes i can immediately figure it out it's just like what i saw somewhere else in something that i heard or remembered or something like this what can you say about the kind of formal structure or the kind of formal foundation you can build such a formal structure on about the kinds of things you would start on in order to build this kind of deep computable knowledge trees so the question is sort of how do you how do you think about computation and there's there's a couple of points here one is what computation intrinsically is like and the other is what aspects of computation we humans with our minds and with the kinds of things we've learned can sort of relate to in that computational universe so if we start on the kind of what can computation be like it's something i've spent some big chunk of my life studying is imagine that you're you know we we usually write programs where we kinda know what we want the program to do and we carefully write many lines of code and we hope that the program does what we intended it to do but the thing i've been interested in is if you just look at the kind of natural science of programs so you just say i'm gonna make this program it's a really tiny program maybe i even pick the pieces of the program at random but it's really tiny and by really tiny i mean you know less than a line of code type thing you say what does this program do and you run it and big discovery that i made in the early eighties is that even extremely simple programs when you run them can do really complicated things really surprised me it took me several years to kind of realize that that was a thing so to speak but that realization that that even very simple programs can do incredibly complicated things that we very much don't expect that discovery i mean i realized that that's very much i think how nature works that is nature has simple rules but yet does all sorts of complicated things that we might not expect you know it's a big thing of the last few years has been understanding that that's how the whole universe and physics works but that's a a quite separate topic but so there's this whole world of programs and what they do and very rich sophisticated things that these programs can do but when we look at many of these programs we look at them and say well that's kind of i don't really know what that's doing it's not a very human kind of thing so on the one hand we have sort of what's possible in the computational universe on the other hand we have the kinds of things that we humans think about the kinds of things that are developed in kind of our intellectual history and that's and the the really the challenge to sort of making things computational is to connect what's computationally possible out in the computational universe with the things that we humans sort of typically think about with our minds now that's a complicated kind of moving target because the things that we think about change over time we've learned more stuff we've invented mathematics we've invented various kinds of ideas and structures and so on so it's gradually expanding we're kind of gradually colonizing more and more of this kind of intellectual space of possibilities but the the real thing the real challenge is how do you take what is computationally possible how do you take how do you encapsulate the kinds of things that we think about in a way that kind of plugs into what's computationally possible and and actually the the big sort of idea there is this idea of kind of symbolic programming symbolic representations of things and so the question is when you look at sort of everything in the world and you kind of you know take some visual scene or something you're looking at and you say well how do i turn that into something like i can kind of stuff into my mind you know there are lots of pixels in my visual scene but the things that i remembered from that visual scene are you know there's a there's a chair in this place it's a kind of a symbolic representation of the visual scene there are two chairs on a table or something rather than there are all these pixels arranged in all these detailed ways and so the question then is how do you take sort of all the things in the world and make some kind of representation that corresponds to the types of ways that we think about things and human language is sort of one form of representation that we have we talk about chairs that's a word in human language and so on how do we how do we take but human language is not in and of itself something from that plugs in very well to sort of computation it's not something from which you can immediately compute consequences and so on and so you have to kind of find a way to take sort of the stuff we understand from human language and make it more precise and that's really the story of symbolic programming and you know what that turns into is something which i didn't know at the time it was going to work as well as it has but back in the nineteen seventy nine or so i was trying to build my first big computer system and trying to figure out you know how should i represent computations at a high level and i kind of invented this idea of using kind of symbolic expressions you know structured as it's kind of like a a function and a bunch of arguments but that function doesn't necessarily evaluate to anything it's just a a thing that sits there representing a structure and so building up that structure and it's turned out that structure has been extremely it's a good match for the way that we humans it seems to be a good match for the way that we humans kind of conceptualize higher level things and it's been for the last i don't know forty five years or something it's served me remarkably well so building up that structure using this kind of symbolic representation but what can you say about abstractions here because you could just start with your physics project you could start at a hyper graph at a very very low level and build up everything from there but you don't you take shortcuts right you you take the highest level of abstraction convert that the kind of abstraction that's convertible to something computable using symbolic representation and then that's your new foundation for that little piece of knowledge yeah somehow all of that is integrated right so the the sort of a very important phenomenon that that is kind of a thing that i've sort of realized is just it's one of these things that sort of in the in the future of kind of everything is going to become more and more important as this phenomenon of computational irreducibility and the the question is if you know the rules for something you have a program you're gonna run it you might say i know the rules great i know everything about what's gonna happen well in principle you do because you can just run those rules out and just see what they do you might run them a million steps you see what happens etcetera the question is can you like immediately jump ahead and say i know it's gonna happen a million steps and the answer is thirteen or something yes and the the one of the very critical things to realize is if you could reduce that computation there is in a sense no point in doing the computation the place where you really get value out of doing a computation is when you had to do the computation to find out the answer but this phenomenon that you have to do the computation to find out the answer this phenomenon of computational irreducibility seems to be tremendously important for thinking about lots of kinds of things so one of the things that happens is okay you've got a model of the universe at the low level in terms of atoms of space and hypergraphs and rewriting hypergraphs and so on and it's happening you know ten to the one hundred times every second let's say well you say great then we've we've nailed it we've we've we know how the universe works well the problem is the universe can figure out what it's gonna do it does those ten to the one hundred you know steps but for us to work out what it's gonna do we have no way to reduce that computation the only way to do the computation to see the result of the computation is to do it and if we're operating within the universe we're kind of there's no there's no opportunity to do that because the universe is doing it as fast as the universe can do it and that's you know that's what's happening so what we're trying to do and a lot of the story of science and a lot of other kinds of things is finding pockets of reducibility mhmm that is you could have a situation where everything in the world is full of computational reducibility we never know what's gonna happen next the only way we can figure out what's gonna happen next is just let the system run and see what happens so in a sense the story of most kinds of science inventions a lot of kinds of things is the story of finding these places where we can locally jump ahead and one of the features of computational reducibility is there are always pockets of reducibility there are always places there are always an infinite number of places where you can jump ahead there's no way where you can jump completely ahead but there are little little patches little places where you can jump ahead a bit and i think you know we can talk about physics project and so on but i think the thing we realize is we kind of exist in a slice of all the possible computational irreducibility in the universe we exist in a slice where there's a reasonable amount of predictability and in a sense as we try and construct these kind of higher levels of abstraction symbolic representations and so on what we're doing is we're finding these lumps of reducibility that we can kind of attach ourselves to and about which we can kind of have fairly simple narrative things to say because in principle you know i say what's gonna happen in the next few seconds you know oh there are these molecules moving around in the air in this room and oh gosh it's an incredibly complicated story and that's a whole computationally reducible thing most of which i don't care about and most of it is well you know the air is still going to be here and nothing much is going to be different about it and that's a kind of reducible fact about what is ultimately at an underlying level a computationally irreducible process and life would not be possible if we didn't have a large number of such reducible pockets pockets amenable to reduction into something symbolic yes i think so i mean life in in the way that we experience it that i mean you know one might you know depending on what we mean by life so to speak the the the experience that we have of sort of consistent things happening in the world the idea of space for example where there's you know we can just say you're here you move there it's kind of the same thing it's still you in that different place even though you're made of different atoms of space and so on this is this idea that it's that there's sort of this level of predictability of what's going on that's us finding a slice of reducibility in what is underneath this computationally reducible kind of system and i think that's sort of the thing which is actually my favorite discovery of the last few years is the realization that it is sort of the interaction between the sort of underlying computational irreducibility and our nature as kind of observers who sort of have to key into computational reducibility mhmm that fact leads to the main laws of physics that we discovered in the twentieth century so this is we talk about this in in in more detail but this is to me it's kind of our nature as observers the fact that we are computationally bounded observers we don't get to follow all those little pieces of computational irreducibility to stuff what is about out there in the world into our minds requires that we are looking at things that are reducible we are compressing kind of we're we're extracting just some essence some kind of symbolic essence of what's the detail of what's going on in the world that together with one other condition that at first seems sort of trivial but isn't which is that we believe we are persistent in time that is you know so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so here's the thing at every moment according to our theory we're made of different atoms of space at every moment sort of the microscopic detail of what what the universe is made of is being rewritten mhmm and that's and in fact the very fact that there's coherence between different parts of space is a consequence of the fact that there are always little processes going on that kind of knit together the structure of space it's kind of like if you wanted to have a fluid with a bunch of molecules in it if those molecules weren't interacting you wouldn't have this fluid that would pour and do all these kinds of things it would just be sort of a free floating collection of molecules so similar it is with space that the fact that space is kind of knitted together is a consequence of all this activity in space and the fact that kind of what we consist of sort of this series of of of we're continually being rewritten and the question is why is it the case that we think of ourselves as being the same us through time that's kind of a a key assumption i think it's a key aspect of what we see as sort of our consciousness so to speak mhmm is that we have this kind of consistent thread of experience well isn't that just another limitation of our mind that we wanna reduce reality into some that kind of temporal consistency is just a nice narrative to tell ourselves well the fact is i think it's critical to the way we humans typically operate is that we have a single thread of experience you know if you if you imagine sort of a a mind where you have you know maybe that's what's happening in various kinds of minds that aren't working the same way other minds work is that you're splitting into multiple threads of experience it's also it's also something where you know when you look at i don't know quantum mechanics for example in the insides of quantum mechanics it's splitting into many threads of experience but in order for us humans to interact with it you kind of have to have to knit all those different threads together so that we say oh yeah a definite thing happened and now the next definite thing happens and so on and i think you know sort of inside it it's it's sort of interesting to try and imagine what's it like to have kind of these fundamentally multiple threads of experience going on i mean right now different human minds have different threads of experience we just have a bunch of minds that are interacting with each other but we don't have a you know within each mind there's a single thread and that's a that is indeed a simplification i think it's a it's a thing you know the general computational system does not have that simplification and it's one of the things you know i i people often seem to think that you know consciousness is the highest level of kind of things that can happen in the universe so to speak but i think that's not true i think it's actually a a specialization in which among other things you have this idea of a single thread of experience which is not a general feature of anything that could kind of computationally happen in the universe so it's a feature of a computationally limited system that's only able to observe reducible pockets so yeah so i mean this word observer it means something in quantum mechanics it means something in a lot of places it means something to us humans as conscious beings so what what's the importance of the observer what is the observer what's the importance of the observer in the computational universe so this question of what is an observer what's the general idea of an observer is actually one of my next projects which got somewhat derailed by the the current sort of ai mania but is there a connection there or is that do you do you think the observer is primarily a physics phenomena is it related to the whole ai thing yes yes it is related so one question is what is a general observer mhmm so you know we know we have an idea what is a general computational system we think about turing machines we think about other models of computation there's a question what is a general model of an observer and there there's kind of observers like us which is kind of the observers we're interested in you know we could imagine an alien observer that deals with computational irreducibility and it has a mind that's utterly different from ours and and completely incoherent with what what we're like but the fact is that you know if we are talking about observers like us that one of the key things is this idea of kind of taking all the detail of the world and being able to stuff it into a mind being able to take all the detail and kind of you know extract out of it a smaller set of of kind of degrees of freedom a smaller number of of elements that will sort of fit in our minds and i think this this question so i've been interested in trying to characterize what is the general observer and the general observer is i think in part there are many let let me give an example of a you know you have a gas it's got a bunch of molecules bouncing around and the thing you're measuring about the gas is its pressure mhmm and the only thing you as an observer care about is pressure and that means you have a piston on the side of this box and the piston is being pushed by the gas and there are many many different ways that molecules can hit that piston but all that matters is the kind of aggregate of all those molecular impacts because that's what determines pressure so there's a huge number of different configurations of the gas which are all equivalent so i think one key aspect of observers is this equivalencing of many different configurations of a system saying all i care about is this aggregate feature all i care about is this overall thing and that's that's sort of one one aspect and when we see that in lots of different again it's the same story over and over again that there's there's a lot of detail in the world but what we are extracting from it is something sort of a thin a thin summary of that of that detail is that thin summary nevertheless true is can it be a crappy approximation sure that on average is is correct i mean if we look at the observer that's the human mind it seems like there's a lot of very as represented by natural language for example there's a lot of really crappy approximation sure and that could be maybe a feature of it well yes ambiguity right right you don't know you know it could be the case you're you're just measuring the aggregate impacts of these molecules but there is some tiny tiny probability that molecules will arrange themselves in some really funky way and that just measuring that average isn't going to be the main point yeah by the way an awful lot of science is very confused about this because you know you look at you look at papers and people are really keen they draw this curve and they have these you know these bars on the curve and things it's just this curve and it's this one thing and it's supposed to represent some system that has all kinds of details in it and this is a way that lots of science has gotten wrong because people say i remember years ago i was studying snowflake growth you know you have the snowflake and it's growing it has all these arms it's doing complicated things but there was a literature on this stuff and it talked about you know what's the rate of snowflake growth and you know it it got pretty good answers for the rate of the growth of the snowflake and then i looked at it more carefully and they had these nice curves of you know snowflake growth rates and so on i looked at it more carefully and i realized according to their models the snowflake will be spherical mhmm and so they got the growth rate right but the detail was just utterly wrong and you know the not only the detail the the whole thing was was not capturing you know it was capturing this aspect of the system that was in a sense missing the main point of what was going on what is the geometric shape of a snowflake snowflakes start in in the phase of water that's relevant to formation of snowflakes it's a phase of ice which starts with a hexagonal arrangement of of water molecules mhmm and so it starts off growing as a hexagonal plate and then what happens is it's a plate oh oh versus sphere well no no but it's it's much more than that i mean snowflakes are fluffy you know typical snowflakes have little little dendritic arms okay yeah and and what actually happens is it's kind of kinda cool because you can make these very simple discrete models with cellular automata and things that that figure this out you start off with this you know hexagonal thing and then the places it it starts to go little arms and every time a little piece of ice adds itself to the snowflake the fact that that ice condensed from the water vapor heats the snowflake up locally and so it makes it less likely for for another piece of ice to accumulate right nearby so this leads to a kind of growth inhibition so you grow an arm and it is a separated arm because right around the arm it got a little bit hot and it didn't add more ice there so what happens is it grows you have a hexagon it grows out of arms the arms grow arms and then the arms grow arms grow arms and eventually actually it's kinda cool because it it actually fills in another hexagon a bigger hexagon and when i first looked at this you know i had a very simple model for this i realized you know when it fills in that hexagon it actually leaves some holes behind so i thought well you know that is that really right so i look at these pictures of snowflakes and sure enough they have these little holes in them that are kind of scars of the way that these arms grow out mhmm so that can't fill in backfill holes so you keep going out yeah they don't backfill and presumably there's a limitation of how big like you can't arbitrarily grow i'm not sure i mean the thing falls through the the i mean i think it does you know it hits the ground at some point i think you can grow i think you can grow in the lab i think you can grow pretty big ones i think you can grow many many iterations of this kind of it goes from hexagon it grows out arms it turns back it fills back into a hexagon it grows more arms again in three d no it's flat usually why is it flat why doesn't it span out okay okay wait a minute you said it's fluffy and fluffy is a three-dimensional property no or no it's it's fluffy snow is okay so you know what makes we're really we're really in it i like to go there but but multiple snowflakes become fluffy well a single snowflake is not fluffy no no a single snowflake is fluffy and what happens is you know if if you have snow that is just pure hexagons mhmm they they can you know they they fit together pretty well it's not it doesn't it doesn't make it doesn't have a lot of air in it mhmm and they can also slide against each other pretty easily and so the snow can be pretty you know can i think avalanches happen sometimes when when the things tend to be these you know hexagonal plates and it kind of slides but then when the thing has all these arms that have grown out it's not they don't fit together very well and that's why the snow has lots of air in it and if you look at one of these snowflakes and if you catch one you'll see it has these little arms and people actually people often say you know no two snowflakes are alike that's mostly because as a snowflake grows they do grow pretty consistently fell through through the air in a different way you'll catch this one at this stage and as it goes through different stages they look really different and so that's why you know it kinda looks like no two snowflakes are alike because you caught them at different at different times so the rules under which they grow are the same it's just the timing is yes okay so the point is science is not able to describe the full complexity of snowflake growth well science if you if you do what people might often do which is say okay let's make it scientific let's turn it into one number mhmm and that one number is kind of the growth rate of the arms or some such other thing that fails to capture sort of the detail of what's going on inside the system and that's in a sense a big challenge for science is how do you extract from the natural world for example those aspects of it that you are interested in talking about now you might just say i don't really care about the fluffiness of the snowflakes all i care about is the growth rate of the arms in in which case you know you have you can have a good model without knowing anything about the fluffiness but the fact is as a practical you know when if if you say what's the what is the most obvious feature of a snowflake oh that it has this complicated shape well then you've got a different story about what you model i mean this this is one of the features of of sort of modeling in science that you know what is a model a model is some way of reducing the actuality of the world to something where you can readily sort of give a narrative for what's happening where you can basically make some kind of abstraction of what's happening and answer questions that you care about answering if you wanted to answer all possible questions about the system you'd have to have the whole system because you might care about this particular molecule where did it go and you know your model which is some big abstraction of that has nothing to say about that so you know one of the things that's that's often confusing in science is people will have i've got a model somebody says somebody else will say i don't believe in your model because it doesn't capture the feature of the system that i care about you know there's always this controversy about you know is the is it a correct model well no model is a except for the actual system itself is a correct model in the sense that it captures everything question is does it capture what you care about capturing sometimes that's ultimately defined by what you're going to build technology out of things like this the one counterexample to this is if you think you're modeling the whole universe all the way down then there is a notion of a correct model but even that is more complicated because it depends on kind of how observers sample things and so on that's a that's a separate story but at least at the first level to say you know this thing about oh it's an approximation you're capturing one aspect you're not capturing other aspects when you really think you have a complete model for the whole universe you better be capturing ultimately everything even though to actually run that model is impossible because of computational irreducibility the only the only thing that successfully runs that model is the actual running of the universe is the universe itself but okay so what you care about is an interesting concept so that's a that's a human concept so that's what you're doing with wolfram alpha and wolfram language is you're trying to come up with symbolic representations yes as simple as possible so a model that's as simple as possible that fully captures stuff we care about yes so i mean for example you know we could we'll have a a thing about you know data about movies let's say we could be describing every individual pixel in every movie and so on but that's not the level that people care about and it's yes this is a i mean and and that level that people care about is somewhat related to what's described in natural language mhmm but what what we're trying to do is to find a way to sort of represent precisely so you can compute things see see one thing we say you give a piece of natural language question is you feed it to a computer you say does the computer understand this natural language well you know the computer processes it in some way it does this maybe it can make a continuation of the natural language you know maybe it can go on from the prompt and say what it's gonna say you say does it really understand it hard to know but for in this kind of computational world there is a very definite definition of does it understand which is could it be turned into this symbolic computational thing from which you can compute all kinds of consequences and that's the that's the sense in which one has sort of a target for the understanding of natural language and that's kind of our goal is to have as much as possible about the world that can be computed in a in a reasonable way so to speak be able to be sort of captured by this kind of computational language that's that's kind of the goal and and i think for us humans the the main thing that's important is as we formalize what we're talking about it gives us a way of kind of building a structure where we can sort of build this tower of consequences of things so if we're just saying well let's talk about it in natural language it doesn't really give us some hard foundation that lets us you know build step by step to work something out i mean it's kind of like what happens in in math if we were just sort of vaguely talking about math but didn't have the kind of full structure of math and all that kind of thing we wouldn't be able to build this kind of big tower of consequences and so you know in a in a sense what we're trying to do with the whole computational language effort is to make a formalism for describing the world that makes it possible to kind of build this this tower of consequences well can you talk about this dance between natural language and wolfram language so there's this gigantic thing we call the internet where people post memes and diary type thoughts and very important signing articles and all of that that makes up the training dataset for gpt and then there's wolfram language how can you map from the natural language of the internet to the wolfram language is there an manual is there an automated way of doing that as we look into the future well so wolframalpha what it does it's kind of front end is turning natural language into computational language right what you mean by that is there's a prompt you ask a question what is the capital of some country yeah right and it and it turns into you know what's the distance between you know chicago and london or something and that will turn into you know geodistance of entity city you know etcetera etcetera etcetera each one of those things is very is very well defined we know you know given that it's the entity city chicago etcetera etcetera etcetera you know illinois united states you know we know the geolocation of that we know its population we know all kinds of things about it mhmm which we have you know curated that data to be able to to know that with some degree of certainty so to speak mhmm and then then we can compute things from this and that's that's kind of the the yeah that that's that's that's the idea but then something like gpt large language models do they allow you to make that conversion much more powerful okay so it's an interesting thing which we still don't know everything about okay the i mean this question of going from natural language to computational language yes in wolfram alpha we've now you know wolframalpha's been out and about for what thirteen and a half years now and you know we've achieved i don't know what it is ninety eight percent ninety nine percent success on queries that get put into it now obviously there's a sort of feedback loop because the things that work are things people go on putting into it so that that but you know we've we've got to a very high success rate of the the little fragments of natural language that put people put in you know questions math calculations chemistry calculations whatever it is you know we can we can we we do very well at that turning those things into computational language now i from the very beginning of wolframalpha i thought about for example writing code with natural language in fact i had i i was just looking at this recently i had a post that i wrote in twenty ten twenty eleven called something like programming with natural language is actually going to work mhmm okay and so you know we had done a bunch of experiments using methods that were you know a little bit some of them are a little bit machine learning like but certainly not the same you know the same kind of idea of vast training data and so on mhmm that is the story of large language models actually i know that that post piece of utter trivia but that that post steve jobs forwarded that post around to all kinds of people at apple mhmm and he they didn't know that was because he never really liked programming languages so he was very happy to see the idea that that that that you could get rid of this kind of layer of kind of engineering like structure he would have liked you know i think what's happening now because it really is the case that you can you know this idea that you have to kind of learn how the computer works to use a programming language is something that is i think a a a thing that you know just like you had to learn the details of the op codes to know how assembly language worked and so on it's kind of a thing that's that's that's a limited time horizon but but kind of the the you know so this idea of how elaborate can you make kind of the prompt how elaborate can you make the natural language and abstract from it computational language it's a very interesting question and you know what chat gbt you know gbt four and so on can do is pretty good it isn't it's a very interesting process i mean i'm still trying to understand this workflow we've been working out a lot of tooling around this workflow from natural language to computational language right and the process especially if it's conversation like dialogue it's like multiple queries kind of thing yeah right there are so many things that are really interesting that that that work and so on so first thing is can you just walk up to the computer and expect to sort of specify a computation what one realizes is humans have to have some idea of kind of this way of thinking about things computationally without that you're kind of out of luck because you just have no idea what you're going to walk up to a computer i remember when i i should tell a silly story about myself the very first computer i saw which was when i was ten years old and it was a big mainframe computer and so on and i didn't really understand what computers did and it's like somebody's showing me this computer and it's like you know can the computer work out the weight of a dinosaur mhmm it's like that isn't a sensible thing to ask that's kind of you know you have to give it that's not what computers do i mean in wolframalpha for example you could say what's the typical weight of a stegosaurus and it would give you some answer but that's a very different kind of thing from what one thinks of computers as doing and so the the kind of the the question of you know first thing is people have to have an idea of what what computation is about you know i think it's a very you know for education that is the key thing it's kind of this this this notion not computer science not sort of the details of programming but just this idea of how do you think about the world computationally computation thinking about the world computationally is kind of this formal way of thinking about the world we've had other ones like logic was a formal way you know as a way of sort of abstracting and formalizing some aspects of the world mathematics is another one computation is this very broad way of sort of formalizing the way we think about the world and the thing that's that's cool about computation is if we can successfully formalize things in terms of computation computers can help us figure out what the consequences are it's not like you formalized it with math well that's nice but now you have to if you're you know not using a computer to do the math you have to go work out a bunch of stuff yourself so i think but this idea let's see i mean the the you know we're trying to take kind of the the we're talking about sort of natural language and its relationship to computational language the the thing the sort of the typical workflow i think is first human has to have some kind of idea of what they're trying to do that if it if it's something that they want to sort of build a tower of of capabilities on something that they want to sort of formalize and make computational so then human can type something into you know some llm system and sort of say vaguely what they want in sort of computational terms then it does pretty well at synthesizing wolfram language code and it'll probably do better in the future because we've got a huge number of examples of of natural language input together with the orphan language translation of that mhmm so it's kind of a a you know that that's a thing where you can kind of extrapolating from all those examples makes it easier to do that that task is the prompter task also kind of debugging the wolfram language code or is your hope to not do that debugging oh no no no i mean so so there are many steps here okay so first the first thing is you type natural language it generates wolf language do you have examples by the way do you have do you have an example that is is it the the the dinosaur example do you have an example that jumps to mind that we should be thinking about some dumb example it's like take my heart rate data mhmm and you know figure out whether i you know make a moving average every seven days or something and work out what the and and make a a plot of the results mhmm k so that's a thing which is you know about two thirds of a line of orphan language code mhmm i mean it's you know list plot of moving average of some data bin or something of the of the data and then you'll get the result and you know the vague thing that i was just saying in natural language could would almost certainly correctly turn into that very simple piece of orphan language code mhmm so you start mumbling about heart rate yeah and and kinda you know you arrive at the moving average kind of idea right you say average over seven days maybe it'll figure out that that's a moving you know that that can be encapsulated as this moving average idea i'm not sure but then the typical workflow that i'm seeing is you generate this piece of orphan language code it's pretty small usually it's and if it isn't small it probably isn't right but you know if it's it's pretty small and you know orphan language is one of the ideas of orphan language is it's a language that humans can read it's not a language which you know programming languages tend to be this one way story of humans write them and computers execute from them orphan language is intended to be something which is sort of like math notation something where you know humans write it and humans are supposed to read it as well and so kind of the workflow that's emerging is kind of this this human mumbles some things you know large language model produces a fragment of orphan language code then you look at that you say yeah that looks well typically you just run it first you see does it produce the right thing you look at what it produces you might say that's obviously crazy you look at the code you see i see why it's crazy you fix it if you really care about the result you really wanna make sure it's right you better look at that code and understand it because that's the way you have the sort of checkpoint of did it really do what i expected it to do now you go beyond that i mean it's it's it's you know what we find is for example let's say the code does the wrong thing then you can often say to the large language model can you adjust this to do this and it's pretty good at doing that interesting so you're using the output of the code to give you hints about the the the function of the code so you're debugging based on the output of the code not the code itself right the plug in that we have the the you know for chat g p t it does that routinely you know it will send the thing and it will get a result it will discover the llm will discover itself that the result is not plausible and it will go back and say oh i'm sorry it's very polite and it it you know it it goes back and says i'll rewrite that piece of code and then it will try it again and get the result the other thing that's pretty interesting is when you're just running so one of the new concepts that we have we invented this whole idea of notebooks back thirty six years ago now and so now there's the question of sort of how do you combine this idea of notebooks where you have you know text and code and output how do you combine that with the notion of of chat and so on and there's some really interesting things there like for example a very typical thing now is we have these these notebooks where as soon as the if if the thing produces errors if the you know run this code and it produces messages and so on the the the llm automatically not only looks at those messages it can also see all kinds of internal information about stack traces and things like this and it can then it does a remarkably good job of guessing what's wrong and telling you so in other words it's it's looking at things it's sort of interesting it's kind of a a typical sort of ai ish thing that it's able to have more sensory data than we humans are able to have because it's able to look at a bunch of stuff that we humans would kind of glaze over looking at and it's able to then come up with oh this is the explanation of what's happening and and what is the data the stack trace the the code you've written previously the natural language you've written yeah it's it's also what's happening is one of the things that's is is for example when there's these messages there's documentation about these messages there's examples of where the messages have occurred otherwise nice all these kinds of things the other thing that's really amusing with this is when it makes a mistake one of the things that's in our prompt when the code doesn't work is read the documentation and we have you know another piece of the plugin that lets it read documentation and that again is very very useful because it it will you know it will figure out sometimes it'll get it'll make up the name of some option for some function that doesn't really exist read the documentation it'll have you know some wrong structure for the function and so on it's that's a powerful thing i mean the thing that you know i've realized is we built this language over the course of all these years to be nice and coherent and consistent and so on so it's easy for humans to understand turns out there was a side effect that i didn't anticipate which is it makes it easier for ais to understand so it's almost like another natural language but yeah so so wofol language is a kind of foreign language yes yes you have a lineup english french japanese wolfram language and then i don't know spanish and then the system is not gonna notice well yes i mean maybe you know that's an interesting question because it really depends on what i see as being a a a important piece of fundamental science that basically just jumped out at us with chatgpt because i think you know the the real question is why does chatgpt work how is it possible to encapsulate you know to successfully reproduce all these kinds of things in natural language you know with a you know a comparatively small he says you know couple hundred billion you know weights of neural net and so on and i think that you know that that relates to kind of a fundamental fact about language which you know the the main the main thing is that i think there's a structure to language that we haven't kind of really explored very well it's kind of this semantic grammar i'm i'm talking about about about language i mean we we kind of know that when we when we set up human language we know that it has certain regularities we know that it has a certain grammatical structure you know noun followed by verb followed by noun adjectives etcetera etcetera etcetera that's its kind of grammatical structure but i think the thing that chatuchibati is showing us is that there's an additional kind of regularity to language which has to do with the meaning of the language beyond just this pure you know part of speech combination type of thing and i i think the the the kind of the the one example of that that we've had in the past is logic and you know i i think my my sort of kind of picture of how was logic invented how was logic discovered it really was a thing that was discovered in its original conception it was discovered presumably by aristotle who kind of listened to a bunch of people orators you know giving speeches and this one made sense that one doesn't make sense this one and you know you see these patterns of you know if the you know i don't know what you know if the if the persians do this then this does that mhmm etcetera etcetera etcetera and what what aristotle realized is there's a structure to those sentences there's a structure to that rhetoric that doesn't matter whether it's the persians and the greeks or whether it's the cats and the dogs it's just you know p and q you can abstract from this the details of these particular sentences you can lift out this kind of formal structure and that's what logic is that's a heck of a discovery by the way logic you're making me realize now yeah it's not obvious the fact that there is an abstraction from natural language that has where you can fill in any word you want yeah is a very interesting discovery now it took a long time to mature i mean aristotle had this idea of syllogistic logic where there were these particular patterns of how you could argue things so to speak and you know in the middle ages part of education was you memorize the syllogisms i forget how many there were but fifteen of them or something and they all had names they all had mnemonics like i think barbara and sullerant were two of the the mnemonics for the the syllogisms and people would kind of this is a valid argument because it follows the barbara syllogism so to speak and and it took until eighteen thirty you know with george boole to kind of get beyond that and kind of see that there was a a level of abstraction that was beyond the this particular template of a sentence so to speak and that's you know what what's interesting there is in a sense you know chachibuty is operating at the aristotelian level it's essentially dealing with templates of sentences by the time you get to bool and boolean algebra and this idea of you know you can have arbitrary depth nested collections of ands and o's and nots and you can resolve what they mean that's the kind of thing that's a computation story that's you know you've gone beyond the pure sort of templates of natural language to something which is an arbitrarily deep computation but the thing that i think we realized from from chatgpt is you know aristotle stopped too quickly mhmm and there was more that you could have lifted out of language as formal structures and i think there's you know in a sense we've captured some of that in in you know some of what what is in language there there's there's a there's a lot of kind of little calculi little algebras of of what you can say what language talks about i mean whether it's i don't know if you say i go from place a to place b place b to place c then i know i've gone from place a to place c if a is a friend of b and b is a friend of c it doesn't necessarily follow that a is a friend of c these are things that are you know that there are if if you go from from place a to place b place b to place c it doesn't matter how you went like logic it doesn't matter whether you flew there walked there swam there whatever you still this transitivity of of where you go is still valid and there are there are many kinds of kind of features i think of the way the world works that are captured in these aspects of of language so to speak and i think what what chatgpt effectively has found just like it discovered logic you know people are really surprised it can do these these logical inferences it discovered logic the same way aristotle discovered logic by looking at a lot of sentences effectively and noticing the patterns in those sentences but it feels like it's discovering something much more complicated than logic so this kind of semantic grammar i think you wrote about this maybe we can call it the laws of language i believe you call or which i like the laws of thought yes that was the title that george boole had for his for his boolean algebra back in eighteen thirty but yes i laws of thought yes that was what he said alright so he thought he thought he nailed it with boolean algebra yeah there's more to it i and it's a good question of how much more is there to it and it seems like one of the reasons as you imply that the reason gpt works chat gpt works is that there's a finite number of things to it yeah i mean it's it's discovering the laws in some sense gpt is discovering these laws of semantic grammar that underlies language yes and what what's sort of interesting is in the computational universe there's a lot of other kinds of computation that you could do mhmm they're just not ones that we humans have cared about and and operate with and that's probably because our brains are built in a certain way and you know the neural nets of our brains are not that different in some sense from the neural nets of of of a large language model and that's kind of and and so when we think about and you know maybe you can talk about this some more but when we think about sort of what will ais ultimately do the answer is insofar as ais are just doing computation they can run off and do all these kinds of crazy computations but the ones that we sort of have have decided we care about are the is this kind of very limited set that's where the reinforcement learning with human feedback seems to come in the more the ai say the stuff that kinda interests us the more we're impressed by it so it can do a lot of interesting intelligent things but we're only interested in the ai systems when they communicate human in a human like way yes about human like topics yes well it's it's like technology i mean in a sense the physical world provides all kinds of things you know there are all kinds of processes going on in physics only a limited set of those are ones that we capture and use for technology because they're only a limited set where we say you know this is a thing that we can sort of apply to the human purposes we currently care about i mean you might have said okay you pick up a piece of of rock you say okay this is a nice silicate it contains all kinds of silicon i don't care then you realize oh we could actually turn this into a you know semiconductor wafer and make a microprocessor out of it and then we care a lot about it yes and it's it's you know it's this thing about what do we you know in the evolution of our civilization what things do we identify as being things we care about i mean it's it's like you know when when there was a little announcement recently of the possibility of a high temperature superconductor mhmm that involved you know the element lutetium which you know generally nobody has cared about yes you know it it's kind of but suddenly if there's this application that relates to kind of human purposes we start to care a lot so given your thinking that gpt may have discovered inklings of laws of thought do you think such laws exist can we linger on that do you yeah what's your intuition here oh definitely i mean the fact is look the the logic is but the first step there are many other kinds of calculi about things that we consider you know the the about sort of things that happen in the world or things that are meaningful well how do you know logic is not the last step you know what i mean so well because we can plainly see that that thing i mean if if you say here's a sentence that is syntactically correct okay you look at it and you're like you know the happy electron you know eight i don't know what some something that it just it you look at and it's like this is meaningless it's just a bunch of words it's syntactically correct the nouns and the verbs are in the right place but it just doesn't mean anything and so there clearly is some rule that there are rules that determine when a sentence is has the potential to be meaningful that go beyond the pure parts of speech syntax and so the question is what are those rules and are there a fairly finite set of those rules my guess is that there's a fairly finite set of those rules and they you know once you have those rules you have a kind of a construction kit just like the the rules of some syntactic grammar give you a construction kit for making syntactically correct sentences so you can also have a construction kit for making semantically correct sentences those sentences may not be realized in the world i mean i think you know the elephant flew to the moon yeah a a a syntactic a a semantically you know we know we have an idea if i say that to you you kind of know what that means but the fact is it hasn't been realized in the world so to speak so semantically correct perhaps is things that can be imagined with the human mind no things that are consistent with both our imagination and our understanding of physical reality i don't know yeah good question i mean it's it's a good question it's it's it's a good question i mean i think it is it is given the way we have constructed language it is things which which fit with the things we're describing in language it's a bit circular in the end because you know you can and and the and the the sort of boundaries of what is physically realizable okay let let's take the example of motion okay motion is a complicated concept it might seem like it's a concept that should have been figured out by the greeks you know long ago but it's actually a really pretty complicated concept because what is motion motion is you can go from place a to place b and it's still you when you get to the other end right you you take an object you move it and it's still the same object but it's in a different place now even in ordinary physics that doesn't always work that way if you're near a space time singularity in a black hole for example and you take your teapot or something you don't have much of a teapot by the time it's near the space time singularity it's been completely you know deformed beyond recognition but so that's a case where pure motion doesn't really work mhmm you can't have a a thing stay the same but so this idea of motion is is something that sort of is a is a slightly complicated idea but once you have the idea of motion you can start once you have the idea that you're gonna describe things as being the same thing but in a different place that sort of abstracted idea then has you know that has all sorts of consequences like this transitivity of motion go from a to b b to c you've gone from a to c and that's so at that level of description you can have what are sort of inevitable consequences they're inevitable features of the way you've sort of set things up and that's i think what this sort of semantic grammar is capturing is things things like that and i you know i think that it's a question of what does the word mean when you say i go from i move from here to there well it's complicated to say what that means this is this whole issue of you know is pure motion possible etcetera etcetera etcetera but once you have kind of got an idea of what that means then there are inevitable consequences of that idea but the the very idea of meaning it seems like there's some words that become it's like there's a latent ambiguity to them i mean it's it's the word like emotionally loaded words like hate and love right it's like what what are they what do they mean exactly what what so especially when you have relationships between complicated objects we seem to take this kinda shortcut descriptive shortcut of to describe like right object a hates object b what's what's that really mean right well words are defined by kind of our social use of them i mean it's not you know a word in computational language for example when we say we have a a construct there we expect that that construct is a building block from which we can construct an arbitrarily tall tower so we have to have a very solid building block and you know we have to it turns into a piece of code it has documentation it's you know it's a whole it's a whole thing mhmm but the word hate you know the documentation for that word well there isn't a standard documentation for that word so to speak it's a complicated thing defined by kind of how we use it when you know if it wasn't for the fact that we were using language i mean so so what is language at some level language is a way of packaging thoughts so that we can communicate them to another mind can these complicated words be converted into something that a computation engine can use right so so i think the answer to that is that that what one can do in computational language is define make a def make a specific definition and if you have a complicated word like let's say the word eat okay you'd think that's a simple word it's you know animals eat things whatever else but you know you do programming you say this function eats arguments mhmm which is sort of poetically similar mhmm to the animal eating things but if you start to say well what are the implications of you know the function eating something you know does it can can the function be poisoned well maybe it can actually but you know if there's a type mismatch or something in the in some language but but you know in what how far does that analogy go and it's it's just an analogy whereas if you use the word eat in a computational language level you would define there isn't a thing which you anchor to the kind of natural language concept eat but it is now some precise definition of that that then you can compute things from but don't you think the analogy is also precise software eats the world don't don't you think there's there's something concrete in terms of meaning about analogies sure but the thing that sort of is the first target for computational language is to take sort of the ordinary meaning of things and try and make it precise make it sufficiently precise you can build these towers of computation on top of it so it's kinda like if you start with a piece of poetry and you say i'm going to define my program with this piece of poetry mhmm it's kinda like that's that's a difficult thing it's better to say i'm gonna just have this boring piece of prose and it's using words in the ordinary way yeah and that's how i'm communicating with my computer and that's how i'm going to build the solid building block from which i can construct this whole kind of computational tower so there is some sense where if you take a poem and and reduce it to something computable you're gonna have very few things left so maybe there's a bunch of human interaction that's just poetic aimless nonsense well that's just like recreational like hamster in a wheel it's not actually producing anything well i i i think that that's a complicated thing because in a sense human linguistic communication is there's one mind it's producing language that language is having an effect on another mind yeah and the question of the sort of a a a type of effect that is well defined let's say where where for example it's very independent of the two minds that the it doesn't you know that there there's communication where it can matter a lot sort of what the experience of of of one mind is versus another one and so on yeah but what is the purpose of natural language communication can we well i think i think the yeah versus so computation computational language somehow feels more amenable to the definition of purpose it's like yeah you're given two clean representations of a concept and you can build a tower based on that is is is natural language the same thing but more fuzzy what well i think the the story of natural language that's the great invention of our species we don't know whether it exists in other species but we know it exists in our species it's the thing that allows you to sort of communicate abstractly from like one generation of the species to another you can you know there is an abstract version of knowledge that can be passed down it doesn't have to be you know genetics it doesn't have to be you know you don't have to apprentice the next species you know the next generation of birds to the previous one to show them how something works yeah there is this abstracted version of knowledge that can be kind of passed down now that you know it relies on it still tends to rely because language is fuzzy it does tend to rely on the fact that you know if we look at the you know some ancient language that where we don't have a chain of translations from it until what we have today we may not understand that ancient language and we may not understand you know its concepts may be different from the ones that we have today we still have to have something of a chain but it is something where we can realistically expect to communicate abstract ideas and that's you know that's one of the big big roles of of language i think you know in in it's you know and that that's been this this ability to sort of concreteify abstract things is what what language has provided do you see natural language and thought as the same the stuff that's going inside your mind well that's been a long debate in philosophy it seems to be become more important now when we think about how intelligent gpt is whatever that means whatever that means but it seems like the stuff that's going on in the human mind seems something like intelligence yeah and this language well we call it intelligence yeah we call it well yes and then so you you start to think of okay what's the relationship between thought the language of thought the laws of thought the laws of the words like reasoning and the laws of language and how that has to do with computation which seems like more rigorous precise ways of reasoning right which are beyond human i mean much of what computers do humans do not do i mean you you might say humans are a subset yes presumably yes hopefully yes the the yes right you know you might say who needs computation when we have large large language models large language models can just you know eventually you'll have a big enough neural net it can do anything mhmm but they're really doing the kinds of things that humans quickly do and there are plenty of sort of formal things that humans never quickly do for example i don't know you know you can some people can do mental arithmetic they can do a certain amount of math in their in their minds i don't think many people can run a program in their minds of any sophistication mhmm it's just not something people do it's not something people even thought of doing because it just it's kind of a it's kind of not you know you can easily run it on a computer well an an arbitrary program yeah aren't we running specialized programs yeah yeah yeah but if i say to you run this program turing machine yeah you know tell me what it does after fifty steps and you're like trying to think about that in your mind that's really hard to do it's not what people do i mean it well in some sense people program they build a computer they program it just to answer your question about what the system does after fifty steps i mean humans build computers yes yes yeah that's right but but they've created something which is then you know then when they run it it's doing something different than what's happening in their minds i mean they've outsourced that that piece of computation from something that is in internally happening in their minds to something that is now a tool that's external to their minds so by the way humans to you didn't invent computers they discovered them they discovered computation which they invented the technology of computers this the computer is just a kind of way to plug into this whole stream of computation there's probably other are the ways there's probably a lot of for sure i mean the the you know the particular ways that we make computers out of semiconductors and electronics and so on that's the particular technology stack we built i mean the story of a lot of what people try to do with quantum computing is finding different sort of underlying physical you know infrastructure for doing computation you know biology does lots of computation it does it using an infrastructure that's different from semiconductors and electronics mhmm it's a you know it's a molecular scale sort of computational process that hopefully we'll understand more about i have some ideas about understanding more about that but you know that's that's another you know it's another representation of computation things that happen in the physical universe at the level of you know these evolving hypergraphs and so on that's another sort of implementation layer for this abstract idea of computation so if gpt or large language models are starting to form starting to develop or implicitly understand the laws of language and thought do you think they can be made explicit yes how can with a bunch of effort i mean it's by doing natural science i mean what is happening in natural science you have the world that's doing all these complicated things and then you discover you know newton's laws for example this is how motion works this is the way that this particular sort of idealization of the world this is how we describe it in a simple computationally reducible way and i think it's the same thing here it's there are sort of computationally reducible aspects of what's happening that you can get a kind of narrative theory for just as we've got narrative theories in physics and so on do you think it will be depressing or exciting when all the laws of thought are made explicit human thought are made explicit i think that once you understand computational reducibility it is it's neither of those things because the fact is people say for example people will say oh but you know i have free will i i kind of you know i operate in a way that is you know you you they they have the idea that they're doing something that is sort of internal to them that they're figuring out what's what's happening but in fact we think there are laws of physics that ultimately determine you know every every nerve you know every electrical impulse in a nerve and things like this so you might say isn't it depressing that we are ultimately just determined by the rules of physics so to speak it's the same thing it's at a higher level it's like it's it's it's a shorter distance to get from kind of semantic grammar to the way that we might construct a piece of text than it is to get from individual nerve firings to how we construct a piece of text but it's not fundamentally different and by the way as soon as we have this kind of level of you know this other level of description it's kind of it helps us to go even further so we'll end up being able to produce more and more complicated kinds of things that just like when we you know if we didn't have a computer and we knew certain rules we could write them down we'd go a certain distance but once we have a computer we can go vastly further and this is the same kind of thing you wrote a blog post titled what is chat g p t doing and why does it work we've been talking about this but can we just step back and linger on this question what what's it what's chat g p t doing what what are these a bunch of billion parameters trained on a large number of words what why does it seem to work again is it is it because to the point you made that there's laws of language that can be discovered by such a process is there something well let let let's let's talk about sort of the low level of what chatgpt is doing i mean ultimately you give it a prompt it's trying to work out you know what should the next word be mhmm right which is wild isn't that isn't that surprising to you that this kinda low level dumb training procedure can create something syntactically correct first and then semantically correct second you know the thing that has been sort of a story of my life is realizing yeah that simple rules can do much more complicated things than you imagine that something that starts simple and starts simple to describe can grow a thing that is you know vastly more complicated than you can imagine yeah and and honestly it's taken me i don't know i've i've sort of been thinking about this now forty years or so and it always surprises me i mean even for example in our physics project sort of thinking about the whole universe growing from these simple rules i still resist because i keep on thinking you know how can something really complicated arise from something that simple it just seems you know it seems wrong but yet you know the majority of my life i've kind of known from from things i've studied that this is the way things work so yes i it is wild that it's possible to write a word at a time and produce a coherent essay for example but it's worth understanding kinda how that's working i mean it's kinda like if if it was going to say you know the cat sat on the what's the next word okay so how does it figure out the next word well it's seen a trillion words written on the internet and it's seen the cat sat on the floor the cat sat on the sofa the cat sat on whatever mhmm so it's minimal thing to do it's just say let's look at what we saw on the internet we saw you know ten thousand examples of the cat sat on the mhmm what was the most probable next word let's just pick that out and say that's the next word and that's that's kind of what it is at some level is trying to do now the problem is there isn't enough text on the internet to for if you have a reasonable length of prompt to that that that specific prompt will never have occurred on the internet and as you as you kind of go further there just won't be a place where you could have trained you know where you could just just worked out probabilities from what was already there mhmm you know like if you say two plus two there'll be a zillion examples of two plus two equaling four and a very small number of examples of two plus two equals five and so on and you can pretty much know what's going to happen so then the question is well if you can't just work out from examples what's gonna happen just with no probabilistic for examples what's gonna happen you have to have a model and there's kind of an idea this idea of making models of things is an idea that really i don't know i think galileo probably was one of the first people who sort of worked this out i mean it's kind of like like you know i think i gave an example of that little book i wrote about about caccibati where it's kinda like you know galileo was dropping cannonballs off the off the different floors of the of the tower of pisa and it's like okay you drop a cannonball off this floor you drop a cannonball off this floor you miss floor five or something for whatever reason but you know the time it took the cannonball to fall to the ground from floors one two three four six seven eight for example then the question is can you work out can you can you make a model which figures out how long did it take the ball how long would it take the ball to fall to the ground from the floor you didn't explicitly measure and the thing galileo realized is that you can use math you can use mathematical formulas to make a model for how long it will take the ball to fall so now the question is well okay you want to make a model for for example something much more elaborate like you've got this arrangement of pixels and is this arrangement of pixels an a or a b does it correspond to something we'd recognize as an a or a b and you can make a similar kind you know each pixel is like a parameter in some equation and you could write down this giant equation where the answer is either you know a or you know one or two a or b and the question is then what kind of a model successfully reproduces the way that we humans would would conclude that this is an a and this is a b you know if if there's a complicated extra tail on the top of the a would we then conclude something different what is the type of model that maps well into the way that we humans make distinctions about things and the big kind of meta discovery is neural nets are such a model it's not obvious they would be such a model it could be that human distinctions are not captured you know we could try searching around for a type of model that could be a mathematical model it could be some model based on something else that captures kind of typical human distinctions about things mhmm it turns out this model that actually is very much the way that we think the architecture of brains works that perhaps not surprisingly that model actually corresponds to the way we make these distinctions and so you know the the the core next point is that the the kind of model this neural net model makes sort of distinctions and generalizes things in sort of the same way that we humans do it mhmm and that's why when you say you know the cat sat on the green blank even though it never it didn't see many examples of the cat sat on the green whatever it can make a or the aardvark sat on the green whatever i'm sure that particular sentence does not occur on the internet and so it has to make a model that concludes what you know it has to kind of generalize from what it's from the actual examples that it's seen and so so you know that that's the fact is that neural nets generalize in the same kind of a way that we humans do if if we were you know the aliens might look at our neural net generalizations and say that's crazy you know that thing when you put that extra little dot on the a that isn't an a anymore that's you know that messed the whole thing up but for us humans we make distinctions which seem to correspond to the kinds of distinctions that neural nets make so then you know the the thing that is just amazing to me about chattgpt is how similar the structure it has is to the very original way people imagine neural nets might work back in nineteen forty three okay and you know there's a lot of detailed engineering you know great cleverness but it's really the same idea and in fact even the sort of elaborations of that idea where people said let's put in some actual particular structure to try and make the neural net more elaborate to be very clever about it mhmm most of that didn't matter i mean there's some things that seem to you know when you when you train this neural net you know the one thing this kind of transformer architecture this attention idea that really has to do with does every one of these neurons connect to every other neuron or is it somehow causally localized so to speak does it like we're making a sequence of words and the words depend on previous words rather than just everything can depend on everything and that seems to be important in just organizing things so that you don't have a a sort of a giant mess mhmm but the thing you know the thing worth understanding about what is chat gpg in the end i mean what is a neural net in the end a neural net in the end is each neuron has a it's taking inputs from a bunch of other neurons it's eventually it's going to have it's going to have a a numerical value it's going to compute some number and it's it's saying i'm gonna look at the the neurons above me it's kind of a series of layers it's gonna look at the neurons above me and it's going to say what are the values of all those neurons then it's gonna add those up and multiply them by these weights and then it's going to apply some function that says if it's bigger than zero or something then make it one or and otherwise make it zero or some slightly more complicated function you know very well how this works but it's a giant equation with a a lot of variables you mentioned figuring out where the ball falls when you don't have data on the fourth floor this the equation here is not as simple as the equation with a hundred and seventy five billion terms and it's quite surprising that in some sense a simple procedure of training such an equation can lead to well i think that a good representation of natural language right the the real issue is you know this architecture of a neural net where where what's happening is you know you've you've you've turned so neural nets always just deal with numbers mhmm and so you know you've turned the sentence that you started with into a bunch of numbers like let's say by mapping you know each word of the fifty thousand words in english you just map each word or each part of a word into some number you feed all those numbers in and then the thing is going to and then those numbers just go into the values of these neurons and then what happens is it's just rippling down going layer to layer until it gets to the end i think chat gbd has about four hundred layers and you're just you know it just goes once through it just every every new word it's gonna compute just says here are the here are the numbers from the words before let's compute the what does it compute it computes the probabilities that it estimates for each of the possible fifty thousand words that could come next and then it decides sometimes it will use the most probable word sometimes it will use not the most probable word it's an interesting fact that there's this so called temperature parameter which you know at temperature zero it's always using the most probable word that it can that it estimated was the the most probable thing to come next you know if you increase the temperature it'll be more and more kind of random in its selection of words it'll go down to lower and lower probability words thing i was just playing with actually recently was the transition that happens as you increase the temperature the thing goes bonkers at a particular you know sometimes at a particular temperature i think maybe about one point two is the thing i was noticing mhmm from yesterday actually that you know usually it's giving reasonable answers and then at that temperature with some probability it just starts spouting nonsense mhmm and you know nobody knows why this happens i mean it's it's and by the way i mean the thing to understand is it's putting down one word at a time but the outer loop of the fact that it says okay i put down a word now let's take the whole thing i wrote so far let's feed that back in let's put down another word that outer loop which seems almost trivial is really important to the operation of the thing and and for example one of the things that is kind of funky is it'll give an answer and you say to it is that answer correct and it'll say no and why does that happen fascinating right right why can it do that well the answer is because it it is going one word at a time sort of forwards mhmm and it didn't you know it it it came along with some sort of chain of of thought in a sense and it it came up with completely the wrong answer mhmm but as soon as you feed it the whole thing that it came up with it immediately knows that that isn't right it immediately can recognize that was a you know a bad syllogism or something mhmm and can see what happened even though as it was being led down this garden path so to speak it didn't it came to the wrong place but it's fascinating that this kind of procedure converges to something that forms a pretty good compressed representation of language on the internet yep that that's quite right right right no i'm i'm not sure what to make of it well look i think you you know there are many things we don't understand okay so for example you know hundred and seventy five billion weights it's maybe about a trillion bytes of information which is very comparable to the training set that was used and you know why that why kind it sort of stands to some kind of reason that the number of weights in the neural net i don't know i can't really argue that i can't really give you a good you know in a sense the very fact that you know insofar as there are definite rules of what's going on you might expect that eventually we'll have a much smaller neural net that will successfully capture what's happening i i don't think the best way to do it is probably a neural net i think a neural net is what you do when you don't know any other way to structure the thing and it's a very good thing to do if you don't know any other way to structure the thing and for the last two thousand years we haven't known any other way to structure it so this is a pretty good way to start but that doesn't mean you can't find sort of in a sense more symbolic rules for what's going on that you know much of which will then be you can kind of get rid of much of the structure of the neural net and replace it by things which are sort of pure steps of computation so to speak sort of with neural net stuff around the edges and that becomes just a you know just a much simpler way to do it so the neural net you hope will reveal to us good symbolic rules that that make the need of the neural net less and less and less right and and there will still be some stuff that's kind of fuzzy just like you know there there are things that it's like this question of what can we formalize what can we turn into computational language what is just sort of oh it happens that way just because brains are set up that way what do you think are the limitations of large language models just to make it explicit well i mean i think that deep computation is not what large language models do i mean that's just it's a different kind of thing you know the outer loop of a large language model if if you're trying to do many steps in a computation the only way you get to do that right now is by spooling out you know all the the whole chain of thought as a bunch of words basically and you know you can make a turing machine out of that if you want to i just was make doing that construction you know in principle you can make an arbitrary computation by just spooling out the words but it's an it's a bizarre and inefficient way to do it but it's something where the you know i i think that's you know sort of the the deep computation is it's it's really what humans can do quickly large language models will probably be able to do well anything that you can do kind of off the top of your head type thing is a is really you know is good for large language models and the things you do off the top of your head you may not get them always right but you know you'll it it's it's thinking it through the same way we do but i wonder if there's an automated way to do something that humans do well much faster to where it like loops so generate arbitrary large code bases of wolfram wolfram language for example well the question is what does he what do you want the code base to do escape control and take over the world okay so you know the thing is when people say you know we we want to build this giant thing mhmm right a giant piece of computational language in a sense it's sort of a failure of computational language if the thing you have to build in other words if we have a description if you have a small description that's the thing that you represent in computational language and then the computer can compute from that yes so in a sense in you know when as soon as you're giving a description the you know if you have to somehow make that description something you know definite something formal and once and and to say to say okay i'm gonna give this piece of natural language and then it's gonna splurt out this giant formal structure that in a sense that doesn't that doesn't really make sense because except in so far as that piece of natural language kind of plugs into what we socially know so to speak but but plugs into kind of our corpus of knowledge then you know that's a way we're capturing a piece of that corpus of knowledge but hopefully we will have done that in computational language how do you make it do something that's big well you know you have to have a way to describe what you want okay i can make it more explicit if you want how about i'll just pop into my head iterate through all the members of congress and figure out how to convince them that they have to let me the meaning the system become president pass all the laws that allows ai systems to take control and be the president i don't know so that's a very explicit like figure out the individual life story of each congressman each senator anybody i don't know right what's required to really kind of pass legislation and figure out how to control them and manipulate them get all the information what would be the biggest fear of this congressman and in such a way that you can take action on it in a digital space so maybe threaten the destruction reputation or something like this right if i can describe what i want yeah you know to what extent can a large language model automate that with the help with the help of concretization of something like wolfram language that makes it more yeah grounded can go rather a long way i'm also surprised how quickly i was able to generate yeah yeah right that's a an attack that that's a yeah you know i i swear i swear i did not think about this before and it's funny how quickly which is a very concerning thing because that that probably this idea will probably do quite a bit of damage and there might be a very large number of other such ideas well i'll give you a a much more benign version of that idea okay you're gonna make an ai tutoring system mhmm and you know that is a that's a a benign version of what you're saying is i want this person to understand this point yes you know you're essentially doing machine learning where the where the where the you know the the loss function the the thing you're trying to get to is get the human to understand this point and and when you do a test on the human that they yes they correctly understand how this or that works and i i am confident that you know sort of a large language model type technology combined with computational language is going to be able to do pretty pretty well at teaching us humans things and it's gonna be an interesting phenomenon because you know sort of individualized teaching is is a thing that has been kind of a you know a goal for a long time i think we're gonna get that and i think more you know that that it has many consequences for you know like like just you know if you know me as an if you the ai know me tell me i'm about to do this thing what is the what are the three things i need to know you know given what i already know you know what's what's or let's say i'm i'm looking at some paper or something right it's it's like there's a version of the summary of that paper that is optimized for me so to speak mhmm and where it really is and i think that's really going to work it it could understand the the major gaps in your knowledge yes that it filled would actually give you a deeper understanding of the topic here right and that's a you know that's an important thing because it it really changes actually i think you know when when you think about education and so on it really changes kind of what's worth doing what's not worth doing and so on it makes you know i know in my life i've learned lots of different fields and you know so i yeah i don't know i have every time i'm always thinking this is the one that's going to i'm not gonna be able to learn yeah but turns out sort of there are sort of meta methods for learning these things in the end and you know i think this this idea that it becomes easier to you know it it becomes easier to be fed knowledge so to speak and it becomes you know if you need to know this particular thing you can you know you can get taught it in an efficient way it's something i think is sort of an interesting feature and i think it makes the you know things like the value of of big towers of specialized knowledge become less significant compared to the kind of meta knowledge of sort of understanding kind of the the big picture and being able to connect things together i think that you know there's been this huge trend of of let's be more and more specialized because we have to you know we we have to sort of ascend these towers of knowledge but by the time you can get you know more automation of being able to get to that place on the tower without having to go through all those steps i think it it sort of changes that picture interesting so your intuition is that in terms of the the collective intelligence of the species and the individual minds that make up that collective there'll be more there will trend towards being generalists and being kind of philosophers that's what i think i think that's where the humans are gonna be useful i think that a lot of these kind of the drilling the the the mechanical working out of things is much more automatable it's much more ai ai territory so to speak no more phds well that's it's interesting yes i mean you know the the the kind of specialization this kind of tower of specialization which has been a feature of you know we've accumulated lots of knowledge in our in our species and and you know in a sense every time we every time we have an a kind of automation a building of tools it becomes less necessary to know that whole tower and it becomes something where you can just use a tool to get to the top of that tower i i think that you know the thing that is ultimately you know when we think about okay what do the ai's do versus what do the humans do it's like ais you tell them you say go achieve this particular objective okay they can maybe figure out a way to achieve that objective we say what objective would you like to achieve the ai has no intrinsic idea of that it's not a defined thing that's a thing which has to come from some other you know some other entity and insofar as we are in charge so to speak or whatever it is and our kind of web of society and history and so on is the thing that is defining what objective we want to go to that's you know that that's that's a thing that we humans are necessarily involved in so to speak to push back a little bit don't you think that gpt future versions of gpt would be able to give a good answer to what objective would you like to achieve from on what basis i mean if they say look here's the terrible thing that could happen okay they're taking the average of the internet mhmm and they're saying you know from the average of the internet what do people want to do well that's the the elon musk adage of the most entertaining outcome is the most likely okay so that could be one from him yeah that could be that could be one objective is maximize global entertainment the dark version of that is drama the the the good version of that is fun right so i mean this this question of what you know if you say to the ai you know what does the species want to achieve yes k there'll be an answer right there'll be an answer it'll be what the average of the internet says the species wants to achieve what what what this this this i think you're using the word average very loosely there right so i think i think the answers will become more and more interesting as these language models are trained better and better no but i mean in the end it's a reflection back of what we've already said yes but it's there's a deeper wisdom to the collective intelligence presumably than each individual maybe isn't that what we're trying to do as a society to to have well i mean that's that's a that's an important i mean that's an interesting question i mean in you know insofar as some of us you know work on trying to innovate and figure out new things and so on it is sometimes it's a it's a complicated interplay between sort of the individual doing the crazy thing off in some some spur so to speak versus the collective that's trying to do sort of the the the the high inertia average thing and it's you know sometimes the collective you know is is bubbling up things that are interesting and sometimes it's pulling down kind of the attempt to make this kind of innovative direction but don't you think the large language models that see beyond that simplification will say maybe intellectual and career diversity is really important so you need the crazy people on the outlier on the outskirts and so like the actual what's the purpose of this whole thing is to explore through this kind of dynamics that we've been using as a human civilization which is most of us focus on one thing and then there's the crazy people on the outskirts doing the opposite of that one thing and you kinda pull the whole society together there's the mainstream science and then there's the crazy science and it's just been the the history of human civilization and maybe the ai system will be able to see that and the more and more impressed we are by a language model telling us this the more control we'll give it to it and the more we'll be willing to let it run our society and hence there's this kind of loop where yeah the society could be manipulated to let the ai system run it right well i mean look one one of the things that's sort of interesting is we might say we always think we're making progress mhmm but yet if you know in a sense by by saying let's take what already exists and use that as a model for what should exist yeah then you know it's interesting that for example you know many religions have taken that point of view there is a you know a sacred book that got written at time x and it defines how people should act for all future time and that's you know it's a it's a model that that people have operated with and in a sense you know this is a version of that that kind of statement it's like take the twenty twenty three version of sort of how the world has exposed itself and use that to define what the world should do in the future but it's not it's an imprecise definition right because just like with religious text and with gpt the human interpretation of what gpt says will be the will be the perturbation in the system it'll be the noise it'd be full of uncertainty it's not like g p t chad gpt will tell you exactly what to do it'll tell you approx a narrative of what like you know it's like a turn the other cheek kinda narrative right that's that's not a fully instructive narrative well until until the ais control all the systems in the world they will be able to very precisely tell you what to do well they'll do what they they'll just do this or that thing and and not only that they'll be auto suggesting to each person you know do this next do that next yeah so i think it's a it's a slightly more prescriptive situation than one has typically seen but you know i think this this whole question of sort of what what's left for the human so to speak to what extent do we you know this idea that there is an existing kind of corpus of purpose for humans defined by what's on the internet and so on that's an important thing but then the question of sort of as we explore what we can think of as the computational universe as we explore all these different possibilities for what we could do all these different inventions we could make all these different things the question is which ones do we choose to follow those choices are the things that in a sense if the humans want to still have kind of human progress that's what we we get to make those choices so to speak in other words the the there's this idea if you say let's take the kind of what exists today and use that as the determiner of all of what there is in the future the thing that is sort of the opportunity for humans is there will be many possibilities thrown up there are many different things that could happen or be done mhmm and the insofar as we want to be in the loop the thing that makes sense for us to be in the loop doing is picking which of those possibilities we want but the degree to which there's a feedback loop of the idea that we're picking something starts becoming questionable because we're influenced by the very systems absolutely that like if that becomes more and more source of our education and wisdom and absolutely knowledge right the ais take over i mean my you know i've thought for a long time that you know it's the you know ar autosuggestion that's really the thing that makes the ai take over it's just that the humans just follow you know yeah we will no longer write emails to each other we'll just send the auto suggested email yeah yeah but the the thing where humans are potentially in the loop is when there's a choice and when there's a choice which we could make based on our kind of whole web of history and so on and and that's you know that's insofar as it's all just you know determined you know the humans don't have a place and and by the way i mean you know at at some level you know it's all kind of a a complicated philosophical issue because at some level the universe is just doing what it does we are parts of that universe that are necessarily doing what we do so to speak yet we feel we have sort of agency in what we're doing and that's that's its own separate kind of interesting issue and we also kinda feel like we're the final destination what the universe was meant to create but we very well could be and likely are some kind of intermediate step obviously yeah what would we're most certainly some intermediate step the question is if there's some cooler more complex more interesting thing that's going to be materialized the conversational universe is full of such things but in in our particular pocket specifically if this is the best we're gonna do or not that's kind of a we can make all kinds of interesting things in the computational universe we when we look at them we say yeah you know that's that's a thing we don't it doesn't really connect with our current our current way of thinking about things i mean it's like in mathematics you know we've got certain theorems there are about three or four million that human mathematicians have written down and published and so on but there are an infinite number of possible mathematical theorems we just go out into the universe of possible theorems and pick another theorem and then people will say well you know that's they look at it and they say i don't know what this theorem means it's not connected to the things that are part of kind of the web of history that we're dealing with you know i think one one point to make about sort of understanding ai and its relationship to us is as we have this kind of whole infrastructure of ai's doing their thing and doing their thing in a way that is perhaps not readily understandable by us humans you know you might say that's a very weird situation how can we have built this thing that behaves in a way that we can't understand that's full of computational irreducibility etcetera etcetera etcetera you know what what is this what's it gonna feel like when the world is run by ais whose operations we can't understand and the thing one realizes is actually we've seen this before that's what happens when we exist in the natural world the natural world is full of things that operate according to definite rules they have all kinds of computational irreducibility we don't understand what the natural world is doing occasionally and you know when you say are the ai's gonna wipe us out for example well it's kind of like is the machination of the ai's going to lead to this thing that eventually comes and destroys the species mhmm well we can also ask the same thing about the natural world are the machination of the natural world going to eventually lead to this thing that's going to you know make make the earth explode or something like this those are those are questions those are and in so far as we think we understand what's happening in the natural world that's a result of science and natural science and so on one of the things we can expect when there's this giant infrastructure of the ais is that's where we have to kind of invent a new kind of natural science that kind of is the natural science that explains to us how the ai's work it's kinda like we can we can you know we have a i don't know a horse or something and we're trying to get it to we're trying to you know ride the horse and go from here to there we don't really understand how the horse works inside but we can get certain rules and certain you know approaches that we take to to persuade the horse to go from here to there and and and take us there and that's the same type of thing that we're kind of dealing with with the sort of incomprehensible computationally irreducible ais but we can identify these kinds of we can find these kind of pockets of reducibility that we can kind of you know that i don't know we're grabbing onto the mane of the horse or something to be able to to ride it or we figure out you know if we if we do this or that to to ride the horse that that's a a a successful way to to get it to do what what we're interested in doing there does seem to be a difference between a horse and a large language model or something that could be called agi connected to the internet let me just ask you about big philosophical question about the threats of these things there's a lot of people like eliezer yatkowski who worry about the existential risks of ai systems is that something that you worry about you know sometimes when you're building an incredible system like wolfram alpha you can kinda get lost in it oh i try and think a little bit about the implications of what one's doing you know it's like the manhattan project kinda situation where you're like it's some of the most incredible physics and engineering being done but it's like where's this gonna go i think some of these arguments about kind of you know there'll always be a smarter ai there'll always be you know and eventually the ais will get smarter than us and then all sorts of terrible things will happen to me some of those arguments remind me of kind of the ontological arguments for the essence of god and things like this they're kind of arguments that are based on some particular model fairly simple model often of kind of there is always a greater this that and the other you know this is and that's you know those arguments tend what tends to happen in the sort of reality of how these things develop is that it's more complicated than you expect that the kind of simple logical argument that says oh eventually there'll be a superintelligence and then it will you know do this and that turns out not to really be the story it turns out to be a more complicated story so for example here's an example of an issue is there an apex intelligence just like there might be an apex predator in some you know ecosystem is there gonna be an apex intelligence the most intelligent thing that there could possibly be right i think the answer is no and in fact we already know this and it's a kind of a back to the whole computational irreducibility story there's kind of a a question of you know even if you have if you if you have sort of a a turing machine and you have a turing machine that that runs as long as possible before before it halts you say is this the machine is this the apex machine that does that there will always be a machine that can go longer and as you go out to the infinite collection of possible turing machines you'll never have reached the end so to speak you'll never you'll always be able to it's kinda like the same same question of whether there'll always be another invention yeah will you always be able to invent another thing the answer is yes there's an infinite tower of possible inventions that's one definition of apex but the the other is like which i also thought you were which i also think might be true is is there a species that's the apex intelligence right now on earth so it's not trivial to say that humans are that yeah it's not trivial i agree it it's a you know i think one of the things that i i've long been curious about kind of other intelligences so to speak i mean i you know i i view intelligence is like computation and it's kind of a you know you're sort of you have the set of rules you deduce what happens i have tended to think now that there's this sort of specialization of computation that is sort of a consciousness like thing that has to do with these you know computational boundedness single thread of experience these kinds of things that are the specialization of computation that corresponds to a somewhat human like experience of the world now the question is so so that's you know there may be other intelligences like you know you know the aphorism you know the weather has a mind of its own it's a different kind of intelligence that can compute all kinds of things that are hard for us to compute but it is not well aligned with us with the way that we think about things it doesn't it doesn't it doesn't think the way we think about things and you know in this idea of different different intelligences every different mind every different human mind is a different intelligence that thinks about things in different ways and you know in terms of the kind of formalism of our physics project we talk about this idea of ruleal space the space of all possible sort of rule systems and different minds are in a sense at different points in rural space human minds ones that have grown up with the same kind of culture and ideas and things like this might be pretty close in real space pretty easy for them to communicate pretty easy to translate pretty easy to move from one place in real space that corresponds to one mind to another place in rural space that corresponds to another sort of nearby mind when we deal with kind of more distant things in rural space like you know the the pet cat or something you know the pet cat has some aspects that are shared with us the emotional responses of the cat are somewhat similar to ours but the cat is further away in real space than people are and so then the question is you know can we identify sort of the can we make a translation from our thought processes to the thought processes of a cat or something like this and you know what what will we get when we you know what what will happen when we get there and i think it's the case that that many you know many animals i don't know dogs for example you know they have elaborate or factory systems they you know they they have sort of the smell architecture of the of the of the world so to speak in a way that we don't and so you know if if you were sort of talking to the dog and you could you know communicate in a language the dog will say well this is a you know a a you know a a flowing smelling this that and the other thing concepts that we just don't have any idea about now what's what's interesting about that is one day we will have chemical sensors that do a really pretty good job know we'll have artificial noses that work pretty well and we might have our augmented reality system show us kind of the same map that the dog could see and things like this you know similar to what happens in the dog's brain and eventually we will have kind of expanded in rural space to the point where we will have those same sensory experiences that dogs have and we will have internalized what it means to have you know the smell landscape or whatever mhmm and and so then we will have kind of colonized that part of rural space until you know we haven't gone you know some things that that you know animals and so on do we've sort of successfully understand others we do not and the question of of what kind of what is the you know what what representation you know how how do we convert things that animals think about to things that we can think about that's not a trivial thing and you know i've i've long been curious i had a very bizarre project at one point of of trying to make an ipad game that a cat could win against its owner right so there it feels like there's a deep philosophical goal there though yes yes i mean the the you know i was curious if you know if pets can work in minecraft or something mhmm and can construct things what will they construct and will what they construct be something where we look at and we say yeah i recognize that or will it be something that looks to us like something that's out there in the computational universe that one of my cellular automata might have produced where we say oh yeah i can kind of see it operates according to some rules i don't know why you would use those rules i don't know why you would care yeah actually it's just a link on that seriously is there a connector in the real space between you and a cat where the cat could legitimately win so ipad is a very limited interface yeah i i i wonder if there's a game where cats win i think the problem is that cats don't tend to be that interested in what's happening on the ipad so you think yeah that's an interface issue probably yeah right right right no i i i think it is likely that i mean you know there are plenty of animals that would successfully eat us if we were you know if we were exposed to them and so there's you know it it's gonna pounce faster than we can get out of the way and so on so there there are plenty of and and probably it's going to you know we think we've hidden ourselves but we haven't successfully hidden ourselves but that's a physical strength i wonder if there's something in in more in the realm of intelligence where an animal like a cat could out well i think there are things certainly in terms of the the speed of processing certain kinds of things for sure i mean the the question of what you know is there a game of chess for example is there cat chess yeah that the cats could play against each other and if we tried to play a cat we'd always lose i don't know it might have to do with speed but it might have to do with concepts also there might be concepts in the cat's head i i tend to think that our species from its invention of language has managed to build up this kind of tower of abstraction that for things like a chess like game will make us win in other words we've become through the fact that we've kind of experienced language and learnt abstraction you know we've sort of become smarter at those kinds of abstract kinds of things now you know that doesn't make us smarter at catching a mouse or something it makes us smarter at the things that we've chosen to to sort of con you know to concern ourselves which are all these kind of abstract things yeah and and i think you know this is again back to the question of of you know what does one care about you know if one's if one's the you know the cat if you if you have the discussion with the cat if we can if we can translate things to have the discussion with the cat the cat will say you know i'm very excited that this light is moving and we'll say why do you care and the cat will say that's the most important thing in the world yeah that this thing moves around i mean it's like when you ask about i don't know you look at archaeological remains and you say these people had this you know belief system about this and you know that was the most important thing in the world to them and and now we look at it and say we don't know what the point of it was i mean i i've been curious you know there are these handprints on caves from twenty thousand or more years ago and it's like nobody knows what these handprints were there for mhmm you know that they may have been a representation of the most important thing you can imagine they may just have been some you know some kid who who rubbed their hands in the mud and stuck them on the walls of the cave you know we don't we don't know and i think but this this whole question of what you know is when you say this question of sort of what's the smartest thing around there's the question of what kind of computation you're trying to do if you're saying you know if you say you've got some well defined computation and how do you implement it well you could implement it by nerve cells you know firing you can implement it with silicon and electronics you can implement it by some kind of molecular computation process in the human immune system or in some molecular biology kind of thing there are different ways to implement it and you know i think this question of of of sort of which you know those different implementation methods will be at different speeds they'll be able to do different things if you say you know which so an interesting question would be what kinds of abstractions are most natural in these different kinds of systems so for a cat it's for example you know the visual scene that we see you might you know we pick out certain objects we recognize you know certain things in that visual scene a cat might in principle recognize different things i i suspect you know evolution biological evolution is very slow and i suspect what a cat notices is very similar we even know that from some neurophysiology what a cat notices is very similar to what we notice of course there's a you know one obvious difference is cats have only two kinds of color receptors so they don't see in the same color color that we do now you know we say we're we're we're better we have three color receptors you know red green blue we're not the overall winner i think the the i think the mantis shrimp is the overall winner winner with fifteen color receptors i think so it can it can kind of make distinctions that with our current you know like the mantis shrimp's view of reality is in at least in terms of color is much richer than ours now but what's interesting is how do we get there so imagine we have this augmented reality system that is even you know it's seeing into the infrared into the ultraviolet things like this and it's translating that into something that is connectable to our brains either through our eyes or more directly into our brains you know then eventually our kind of web of the types of things we understand will extend to those kinds of constructs just as they have extended i mean there are plenty of things where we see them in the modern world because we made them with technology and now we understand what that is mhmm but if we'd never seen that kind of thing we wouldn't have a way to describe it we wouldn't have a way to understand it and so on alright so that actually stemmed from our conversation about whether ai is gonna kill all of us and you we've discussed this kinda spreading of intelligence to rule your space that in practice it just seems that things get more complicated things are more complicated than the story of well if you build the thing that's plus one intelligence that thing will be able to build the thing that's plus two intelligence and plus three intelligence and that will be exponential it'll become more intelligent exponentially faster and so on until it completely destroys everything but you know that intuition might still not be so simple but it might still care carry validity and there's two interesting trajectories here one a superintelligence system remains in rural proximity to humans to where we're like holy crap this thing is really intelligent let's elect the president and then there could be perhaps more terrifying intelligence that starts moving away they might be around us now they're moving far away in real world space but they're still sharing physical resources with us right yes and so they can rob us of those physical resources and destroy humans just kinda casually yeah just just the like nature could like nature could but it seems like there's something unique about ai systems where there is this kind of exponential growth like the way well sorry nature has so many things in it one of the things that nature has which is very interesting are viruses for example mhmm there is systems within nature that have this kind of exponential effect and that terrifies us humans because again you know there's only eight billion of us and you can just kinda it's it's not that hard to just kinda whack them all real quick so i mean is that something you think about that yeah i've thought about that yes the threat of it i mean are you as concerned about as somebody like ilyazar yarkovsky for example just big big painful negative effects of ai on society you know no but perhaps that's because i'm intrinsically an optimist yeah i mean i think that there are things i i think the thing that one you know one sees is there's going to be this one thing and it's going to just zap everything somehow you know i maybe i have faith in computational irreducibility so to speak mhmm that there's always unintended little corners that you know just like somebody says i'm going to or i don't know somebody has some some bio weapon and they say we're gonna release this and it's going to do all this harm but then it turns out it's more complicated than that because you know the kind of some humans are different and you know the exact way it works is a little different than you expect it's something where sort of the the the great big you you know you smash the thing with something you know you the asteroid collides with the earth yeah and it kind of you know and yes you know the earth is cold for two years or something and you know then lots of things die but not everything dies and it's you know there's there's usually i mean i i kind of this is in a sense the sort of story of computational irreducibility there are always unexpected corners there are always unexpected consequences and i don't think that they kind of whack it over the head with something and then it's all gone is you know that can obviously happen the earth can be swallowed up in a black hole or something and then it's kind of presumably presumably all over the but but you know i think this question of of what you know what what do i think the realistic paths are i think that there will be sort of an increasing i mean the the people have to get used to phenomena like computational reducibility there's an idea that we built the machines so we can understand what they do and we're we're going to be able to control what happens well that's not really right now the question is is the result of that lack of control going to be that the machines kind of conspire and sort of wipe us out maybe just because i'm an optimist i don't tend to think that that's you know that's in the cards i think that the you know as a realistic thing i i suspect you know what will sort of emerge maybe is kind of an ecosystem of the ais just as you know again i i don't really know i mean this is something it's it's hard to it's hard to be clear about what will happen i mean i think that the you know there are there are a lot of sort of details of you know what could we do what systems in the world could we connect an ai to you know i have to say i was just couple of days ago i was working on this chatgpt plug in kit that we have for wolfram language okay where you can you know you can create a plugin and it runs wolfram language code mhmm and it can run wolfram language code back on your own computer yeah and i was thinking well i can just make it you know i can tell chatgpt create a piece of code and then just run it on my computer and i'm like you know that that sort of personalizes for me the what could what could possibly go wrong so to speak was that exciting or scary that possibility it was a little bit scary actually because it's kind of like like i realized i'm i'm i'm delegating to the ai just write a piece of code you know you're in charge write a piece of code run it on my computer and pretty soon all my files that's like that's like a that's like russian roulette but like much more complicated yes than that yes yes right that's a good drinking game i don't know so well right i mean that's why that's how much you're drinking it's an interesting question then if you do that right what is the sandboxing that you should have and that's sort of a that's a a version of of that question for the world that is as soon as you put the ais in charge of things you know how much how many constraints should there be on these systems before you put the ais in charge of all the weapons and all these you know all these different kinds of systems well here's the fun part about sandboxes is the ai knows about them it has the tools to crack them look the fundamental problem of computer security yeah is computational irreducibility yes because the fact is any sandbox is never any you know it's never gonna be a perfect sandbox if you want the system to be able to do interesting things i mean this this is the problem that's happened the generic problem of computer security that as soon as you have your you know firewall that is sophisticated enough to be a universal computer that means it can do anything and so long as if you find a way to poke it so that you actually get it to do that universal computation thing that's the way you kind of crawl around and get it to do the thing that it wasn't intended to do and that's sort of a another version of computational irreducibility is you can you know you can kind of you get it to do the thing you didn't expect it to do so to speak there's so many interesting possibilities here that manifest themselves from the compute computationally reducibility here it's just so many things could happen because in digital space things move so quickly you can have a chatbot you can have a little piece of code that you could basically have chat g p t generate viruses yep and sit down there on purpose and they the digital viruses yes and they could be brain viruses too they they convince kinda like phishing emails yes they can convince you of stuff yes and and no doubt you can you know in a sense we've had the the loop of the machine learning loop of making things that convince people of things yeah is surely going to get easier to do yeah and you know then what does that look like well it's again you know we humans are you know we're this is a new environment for us and admittedly it's an environment which a little bit scarily is is changing much more rapidly than i mean you know people worry about you know climate change is gonna happen over hundreds of years and you know the environment is changing but the environment for you know in the the kind of digital environment might change in in six months so one of the relevant concerns here in terms of the impact of gpt on society is the nature of truth that's relevant to wolfram alpha because computation through symbolic reasoning that's embodied in wolfram alpha's interface there's a kinda sense that what wolfram alpha tells me is true mhmm so we hope yeah i mean you could probably analyze that you could show you can't prove that it's always gonna be true competition reducibility but it's gonna be more true than not it's look the fact is it will be the correct consequence of the rules you've specified and insofar as it talks about the real world you know that is our job in sort of curating and collecting data to make sure that that data is quote as true as possible now what does that mean well you know it's always an interesting question i mean for us our operational definition of truth is you know somebody says who's the best actress mhmm who knows but somebody won the oscar and that's a definite fact yeah and so you know that's the kind of thing that we can make computational as a piece of truth if you ask you know these things which you know a sensor measured this thing it did it this way a machine learning system this particular machine learning system recognized this thing that's a that's a sort of a definite a fact so to speak mhmm and that's you know there are there is a good network of those things in the world it's certainly the case that particularly when you say is so and so a good person yeah you know that's a that's a hopelessly you know we might have a computational language definition of good i don't think it'd be very interesting because that's a very messy kind of concept not really amenable to kind of you know the i think as far as we will get with those kinds of things is i want x there's a kind of meaningful calculus of i want x and that has various consequences i mean i'm not sure i haven't i haven't thought this through properly but i think you know a concept like is so and so a good person is that true or not that's a mess that's a mess that's amenable to computation i think i think it's a mess when humans try to define what's good like through legislation but when humans try to define what's good through literature through history books through poetry it starts being well i don't know i mean that particular thing it's kind of like you know we're we're we're going into kind of the ethics of what what counts as good so to speak and you know what do we think is right and so on and i think that's a a thing which you know one feature is we don't all agree about that there's no theorems about kind of you know there's no there's no theoretical framework that says this is this is the way that ethics has to be well first of all there's stuff we kind of agree on and there's some empirical backing for what works and what doesn't from just even the morals and ethics within religious texts so we seem to mostly agree that murder is bad there's certain universals that seem to emerge i wonder whether murder of an ai is bad well i tend to think yes but i think we're gonna have to contend with that question oh and i wonder what ai would say yeah well i think you know one of the things with with ais is it's one thing to wipe out that ai that is only you know has no owner you can easily imagine an ai kind of hanging out on the on the you know on on the internet without having any particular owner or anything like that and then you say well well what harm does it you know it it's it's okay to get rid of that ai mhmm of course if the ai has ten thousand friends who are humans and all those you know all those ten thousand humans will be incredibly upset that this ai just got exterminated it becomes a slightly different more entangled story but yeah no i think that this question about what do humans agree about it's you know there are certain there are certain things that you know human laws have tended to consistently agree about you know there have been times in history when people have sort of gone away from certain kinds of laws even ones that we would now say how could you possibly have not not done it that way you know that just doesn't seem right at all but i think i mean this question of what i don't think one can say beyond saying if you have a set of rules that will cause the species to go extinct mhmm that's probably you know you could say that's probably not a a winning set of laws because even to have a thing on which you can operate laws requires that the species not be extinct but between sort of what's the distance between chicago and new york that wolfram alpha can answer and the question of if this person is good or not there seems to be a lot of gray area and that starts becoming really interesting i think your since the creation of wolfram alpha have been a kind of arbiter of truth at a at a large scale mhmm so the system is generates more truth than try to make sure that the things are true i mean look as a practical matter when people write computational contracts and it's kinda like you know if this happens in the world then do this yes and this hasn't developed as as quickly as it might have done you know this has been a sort of a blockchain story in part and so on although blockchain's not really necessary for the idea of computational contracts but you can imagine that eventually sort of a large part of what's in the world are these giant chains and networks of computational contracts and then something happens in the world and this whole giant domino effect of contracts firing autonomously that cause other things to happen and you know for us you know we've been the main sort of source the oracle of of quotes facts or truth or something mhmm for things like blockchain computational contracts and such like and there's a question of you know what you know i consider that responsibility to actually get the stuff right and one of the things that is tricky sometimes is when is it true when is it a fact when is it not a fact yes i think the best we can do is to say you know we we have a procedure we follow the procedure we might get it wrong but at least we won't be corrupt about getting it wrong so to speak that's beautifully put i have a transparency about the procedure the problem starts to emerge when the things that you convert into computational language start to expand for example into the realm of politics mhmm so this is where it's almost like this nice dance of wolfram alpha and chad gbt chad gpt like you said is shallow and broad mhmm so it's it's it's gonna give you an opinion on everything but it writes fiction as well as fact which is exactly how it's built i mean that's exactly it is making language and it is making both even in code it writes fiction i mean it's kind of fun to see sometimes you know it'll write fictional orphan language code yeah that that term it kinda looks right yeah it looks right but it's actually not pragmatically correct yeah but but yes it's it's a it has a view of kind of roughly how the world works at the same level as as books of fiction talk about roughly how the world works they just don't happen to be the way the world actually worked or whatever but yes that that's no i i agree that's sort of a you know we are attempting with with our whole you know wolfram language computational language thing to represent at least well it's either it doesn't necessarily have to be how the actual world works because we can invent a set of rules that aren't the way the actual world works and run those rules but then we're saying we're going to accurately represent the results of running those rules which might or might not be the actual rules of the world but we also are trying to capture features of the world as accurately as possible to represent what happens in the world now again as we've discussed you know the the atoms in the world arranged you know you say i don't know you know was there a tank that showed up you know that that you know drove somewhere mhmm okay well you know what is a tank it's an arrangement of atoms that we abstractly describe as a tank mhmm and you could say well you know there's some arrangement of atoms that is a different arrangement of atoms but it's and it's not you know we didn't we didn't decide it's like this observer theory question of you know what what arrangement of atoms counts as a tank versus not a tank so there's there's even things that we consider strong facts you could start to kinda disassemble them and show that they're not right i mean so so the question of whether oh i don't know was this gust of wind strong enough to blow over this particular thing well a gust of wind is a complicated concept you know it's full of little pieces of fluid dynamics and little vortices here and there and you have to define you know was it you know what the aspect of the gust of wind that you care about might be it put this amount of pressure on this you know blade of some some you know wind turbine or something mhmm and you know that that's the and but but you know if you say if you have something which is the fact of the gust of wind was this strong or whatever that you know that is you have to have some definition of that you have to have some measuring device that says according to my measuring device that was constructed this way the gust of wind was this so what can you say about the nature of truth that's useful for us to understand chat gpt because you've been you've been contending with this idea of what is fact and not and it seems like chat g p t is used a lot now i've seen it used by journalists to write articles uh-huh and so you have people that are working with large language models trying to desperately figure out how do we essentially censor them through different mechanisms either manually or through reinforcement learning with human feedback try to align them to right to not say fiction just to to say nonfiction as much as possible right this is the importance of computational language as an intermediate it's kinda like you've got the large language model it's able to surface something which is a formal precise thing that you can then look at and you can run tests on it and you can do all kinds of things it's always gonna work the same way and it's precisely defined what it does and then the large language model is the interface i mean the way i view these large language models one of their important i mean there are many use cases and you know it's a remarkable thing to talk about some of these you know literally you know every day we're coming up with a couple of new use cases some of which are very very very surprising and things where i mean but the best use cases are ones where it's you know even if it gets it roughly right it's still a huge win like a use case we had from a week or two ago is read our bug reports you know we've got hundreds of thousands of bug reports that have accumulated over decades and it's like you know can we have it just read the bug report figure out where the where is the bug likely to be mhmm and you know hone in on that piece of code maybe it'll even suggest some some you know sort of way to fix the code it might get that it might be nonsense what it says to about how to fix the code but it's incredibly useful that it was able to you know yeah so awesome it's so awesome because even the nonsense will somehow be instructive i don't i don't quite understand that yet i've yeah there's so many programming related things like for example the translating from one programming language to another is really really interesting it's extremely effective but then you the failures reveal the path forward also yeah but i think i mean the the the big thing i mean in in that kind of discussion the unique thing about our computational language is it was intended to be read by humans yes and so it has that's really important right and so it has this thing where you can but but you know thinking about sort of chatgpt and its use and so on one of the big things about it i think is it's a linguistic user interface that is so a typical use case might be and then take the journalist case for example it's like let's say i have five facts that i'm trying to turn into an article or i'm trying to i'm trying to write a report where i have basically five facts that i'm trying to include in this report but then i feed those five facts to chattgpt it puffs them out into this big report and then and then that's a good interface for it you know another if i just gave if i just had in my terms those five bullet points and i gave them to some other person the person would say i don't know what you're talking about because these are you know this is your version of this sort of quick notes about these five bullet points but if you puff it out into this thing which is kind of connects to the collective understanding of language then somebody else can look at it and say okay i understand what you're talking about now you can also have a situation where that thing that was puffed out is fed to another large language model mhmm you know it's kinda like you know you're applying for the permit to you know i don't know grow fish in some place or something like this and it you know it it and and you have these facts that you're putting in you know i'm gonna have a a you know i'm gonna you know have this kind of water and i don't know what it is you just got a few bullet points it puffs it out into this big application you fill it out then at the other end the you know the fisheries bureau has another large language model that just crushes it down because the fisheries bureau cares about these three points mhmm and it knows what it cares about and it then so it's really the the natural language produced by the large language model is sort of a transport layer that you know is really llm communicates with llm i mean it's kinda like the you know i write a piece of email using my llm yeah and you know puff it out from the things i want to say your llm turns it into and the conclusion is x now the issue is you know that the thing is going to make this thing that is sort of semantically plausible mhmm and it might not actually be what you you know it might not be kind of relate to the world in the way that you think it should relate to the world i've seen this you know i've been doing okay i'll give you a couple of examples i was doing this thing when we announced this this plugin for for for chatgpt i had this lovely example of a math word problem some complicated thing and it did a spectacular job of taking apart this elaborate thing about you know this person has twice as many chickens as this etcetera etcetera etcetera and it turned it into a bunch of equations it fed them to orphan language we solved the equations everybody did great we gave back the results and i thought okay i'm gonna put this in this blog post i'm writing okay i thought i'd better just check and turns out it got everything all the hard stuff it got right in the very end last two lines it just completely goofed it up and gave the wrong answer and i would not have noticed this mhmm same thing happened to me two days ago k so i i thought you know i i made this with this chatgibbutti plug in kit i made a thing that would emit a sound would play a tune on my local computer mhmm right so chargebeet would produce you know a series of notes and would play this tune on my computer very cool okay so i thought i'm gonna ask it play the tune that hal sang when hal was being disconnected in two thousand one okay so it it there it is daisy was it daisy yes daisy yeah right so so okay so i think you know and so it produces a bunch of notes and i'm like this is spectacular this is amazing and then i thought you know i was just gonna put it in and then i thought i better actually play this and so i did and it was mary had a little lamb oh wow oh wow but it was mary had a little lamb yeah yes wow so it's correct but wrong yes it was you could easily be mistaken yes right and in fact i i kind of gave the i had this quote from hal to explain you know it's it's as it the the hal you know states in the movie you know it's the hal nine thousand is you know the thing was just a a rhetorical device because i'm realizing oh my gosh you know this chatchipt you know could have easily fooled me i mean it did this it did all the it did this amazing thing of knowing this thing about the movie and being able to turn that into the the notes of the song except it's the wrong song yeah and you know hal in in the movie hal says you know i think it's something like you know no hal nine no nine thousand series computer has ever been found to make an error mhmm we are for all practical purposes perfect and incapable of error and i thought that was kind of a charming sort of quote from from hal to make in connection with with what chatt gpt had done in that case the interesting things about the llms like you said that they are very willing to admit their error well yes i mean that's a question of the rlh the reinforcement learning human feedback thing oh right that that that's you know that's a nice question an llm the the really remarkable thing about chatgpt is you know i had been following what was happening with large language models and i played with them a whole bunch and they were kind of like you know it's kind of like what you would expect based on sort of sort of statistical continuation of language it's it's interesting but it's not breakout exciting and then i think the kind of the the kind of reinforcement that the human feedback reinforcement learning you know in in making chatgpt try and do the things that humans really wanted to do that broke through that kind of reached this threshold where the thing really is interesting to us humans and by the way it's interesting to see how you know you change the temperature or something like that the thing goes bonkers and it no longer is interesting to humans it's producing garbage yeah and it's it's kind of right it's somehow it managed to get this this above this threshold where it really is well aligned to what we humans are interested in and and kind of that that's and and i think you know nobody saw that coming i think certainly nobody i've talked to and nobody who was involved in in that project seems to have known it was coming it's just one of these things that is a sort of remarkable threshold i mean you know when we built wolframalpha for example i didn't know it was gonna work you know we tried to build something that would have enough knowledge of the world that it could answer a reasonable set of questions that we could do good enough natural language understanding that typical things you type in would work we didn't know where that threshold was mhmm i mean i was not sure that it was the right decade to try and build this even the right you know fifty years to try and build it you know and i think that was it's the same type of thing with chattgpt that i don't think anybody could have predicted that you know twenty twenty two would be the year that this this became possible i think you tell a story about marvin minsky and showing it to him and saying that like no no no this time it actually works yes yes and i mean it's you know it's the same thing for me looking at these large language models it's like when when people are first saying first few weeks of chat gbt it's like oh yeah you know i've seen these large language models and then you know and then i actually try it and you know oh my gosh it actually works and i think it's but but you know the things and the thing i found you know i remember one of the first things i tried was write a persuasive essay that a wolf is the bluest kind of animal mhmm k so it writes this thing and it starts talking about these wolves that live on the tibetan plateau and they're named some latin name and so on and i'm like really i'm starting to look it up on the web and it's like well it's actually complete nonsense but it's extremely plausible i mean it's plausible enough that i was going and looking it up on the web and wondering if there was a wolf that was blue you know i mentioned this on some live streams i've done and so people have been sending me these pictures of blue wolves maybe i was onto something can you kinda give your wise sage advice about what humans who have never interacted with ai systems not even like with wolfram alpha are now interacting with chad gpt because it it becomes it's accessible to a certain demographic that may have not touched ai systems before what do we do with truth like journalists for example yeah how do we think about the output of these systems i think this idea the idea that you're going to get factual output is not a very good idea i mean it's just this is not it is a linguistic interface it is producing language and language can be truthful or not truthful and that's a a different slice of what's going on i think that you know what we see in for example kind of you know go check this with your fact source for example mhmm you can do that to some extent but then it's going to not check something it's going you know that is again a thing that is sort of a does it check-in the right place i mean we we see that in you know does it call the you know the wolfram plug in in the right place you know often it does sometimes it doesn't you know i i think the the real thing to understand about what's happening is which i think is very exciting is kind of the the great democratization of access to computation yeah and and you know i think that when you look at sort of the there's been a long period of time when computation and the ability to figure out things with computers has been something that kind of only the only the druids at some level can can achieve you know i myself have been involved in trying to sort of de druidify access to computation i mean back before mathematica existed you know in nineteen eighty eight if you were a you know physicist or something like that and you wanted to do a computation you would find a programmer you would go and you know delegate the the computation to that programmer hopefully they'd come back with something useful maybe they wouldn't there'd be this long you know multi week you know loop that you go through and then it was actually very very interesting to see nineteen eighty eight you know like first people like physicists mathematicians and so on then other lots of other people but this very rapid transition of people realizing they themselves could actually type with their own fingers and you know make some piece of code that would do a computation that they cared about and you know it's been exciting to see lots of discoveries and so on made by by using that tool and i think the same thing is you know and we we see the same thing you know wolframalpha is dealing with it is not as deep computation as you can achieve with whole wolfram language mathematica stack but the thing that's to me particularly exciting about kind of the large language model linguistic interface mechanism is it dramatically broadens the access to kind of deep computation i mean it's it's kinda like one of the things i've sort of thought about recently is you know what's gonna happen to all these programmers what's gonna happen to all these people who you know a lot of what they do is write slabs of boilerplate code mhmm and in a sense you know i've been saying for forty years that's not a very good idea you know you can automate a lot of that stuff with a high enough level language that slab of code that's designed in the right way you know that slab of code turns into this one function we just implemented that you can just use mhmm so in a sense the the fact that there's there's all of this activity of doing sort of lower level programming is something for me it seemed like i don't think this is the right thing to do but you know and and lots of people have used our technology and and not had to do that but the fact is that that's you know so when you look at i don't know computer science departments that have that have turned into places where people are learning the trade of programming so to speak it's it's sort of a question of what's gonna happen and i think there are two dynamics one is that kind of sort of boilerplate programming is going to become you know it's going to go the way that assembly language went back in the day of something where it's really mostly specified by at a higher level you know you start with natural language you turn it into a computational language that's you look at the computational language you run tests you understand that's what's supposed to happen you know if we do a great job with compilation of the of the the you know of the computational language it might turn into llvm or something like this but you know or or it just directly gets gets run through the algorithms we have and so on but but then so that's kind of a a a tearing down of this kind of this big structure that's been built of of teaching people programming mhmm but on the other hand the other dynamic is vastly more people are gonna care about computation so all those departments of you know art history or something that really didn't use computation before now have the possibility of accessing it by virtue of this kind of linguistic interface mechanism and if you create an interface that allows you to interpret the debug and interact with the computational language then that makes it even more accessible yeah well i mean the the i think the thing is that right now you know the average you know art history student or something probably isn't going to you know they're not probably they don't think they know about programming and things like this but by the time it really becomes a kind of purely you know you just walk up to it there's no documentation you start just typing you know compare these pictures with these pictures and you know see the use of this color whatever and you generate this piece of of computational language code that gets run you see the results you say oh that looks roughly right or you say that's crazy and maybe then you eventually get to say well i better actually try and understand what this computational language code did and and that becomes a thing that you learn just like it's kind of an interesting thing because unlike with mathematics where you kinda have to learn it before you can use it this is a case where you can use it before you have to learn it well i got a sad possibility here or maybe exciting possibility that very quickly people won't even look at the computational language they'll trust that it's generated correctly as you get better and better generating that language yes i think that there will be enough cases where people see you know because you can make it generate tests too yes and and so you'll say we've we're doing that i mean that's it's a pretty cool thing actually yes because you you you know say this is the code and you know here are a bunch of examples of running the code yeah okay people will at least look at those and they'll say that example is wrong and you know then it'll kind of wind back from there and i agree that that the the kind of the intermediate level of people reading the computational language code in some case people will do that in other case people just look at the tests and or even just look at the results and sometimes it'll be obvious that you got the thing you wanted to get because you were just describing you know make me this interface that has two sliders here and you can see it has that those two sliders there and that's that's kind of that's that's the result you want mhmm but i i think you know one of the questions then is in that setting where you know you have this kind of ability broad ability of people to access computation what should people learn you know in other words right now you know you go to computer science school so to speak and a large part of what people end up learning i mean it's been a funny historical development because back you know thirty forty years ago computer science departments were quite small mhmm and they taught you know things like finite automaton theory and compiler theory and things like this you know company like mine rarely hired people who'd come out of those programs because the stuff they knew was well i think is very interesting i love that theoretical stuff but you know it wasn't that useful for the things we actually had to build in software engineering and then kind of there was this big pivot in the nineties i guess where there was big demand for sort of it type programming and so on and software engineering and then you know big demand from students and so on you know we want to learn this stuff and and and and i think you know the thing that really was happening in part was lots of different fields of human endeavor were becoming computational you know for all x there was a there was a computational x mhmm and this is a and that was a thing that the people were responding to and but then kind of this idea emerged that to get to that point the main thing you had to do was to learn this kind of trade or or or skill of doing you know programming language type programming mhmm and and that you know it it kind of it's a strange thing actually because i you know i remember back when i used to be in the professoring business which is now thirty five years ago so gosh that's a rather long time ago time flies we're coming you know it was it was right when they were just starting to emerge kind of computer science departments at sort of fancy research universities and so on i mean some had already had it but the the other ones yep that that were just starting to have that and it was kind of a a a thing where they were kind of wondering are we going to put this thing that is essentially a a trade like skill are we going to somehow attach this to the rest of what we're doing and a lot of these kind of knowledge work type activities have always seemed like things where that's where the humans have to go to school and learn all this stuff and that's never going to be automated yeah and you know this is it's kind of shocking that rather quickly you know a lot of that stuff is clearly automatable and i think you know but the question then is okay so if it isn't worth learning kind of you know how to do car mechanics you only need to know how to drive the car so to speak what do you need to learn and you know in other words if you don't need to know the mechanics of how to tell the computer in detail you know make this loop you know set this variable but you know set up this array whatever else if you don't have to learn that stuff you don't have to learn the kind of under the hood things what do you have to learn i think the answer is you need to have an idea where you want to drive the car in other words you need to have some notion of you know your you know you need to have some picture of sort of what the what the architecture of what is computationally possible is well there's also this kind of artistic element of of conversation because you ultimately you use natural language to control the car so it's not just where you wanna go well yeah you know it's interesting it's a question of who's gonna be a great prompt engineer yeah okay so my current theory this week good expository writers are good prompt engineers what's an expository writer so like somebody who can explain stuff well but which department does that come from in the university yeah i have no idea i think they killed off all the expository writing departments well there you go strong words of stephen wolfram well i don't know i don't i'm not sure if that's right i mean i i actually am curious because i in fact i just sort of initiated this kind of study of of what's happened to different fields at universities because like you know there used to be geography departments at all universities and then they disappeared actually right before gis became common i think they disappeared you know linguistics departments came and went in many universities it's kind of interesting because these things that people have thought were worth learning at one time and then they kind of die off and then you know i do think that it's kind of interesting that for me writing prompts for example i realize you know i i think i'm an okay expository writer and i realize when i'm sloppy writing a prompt and i don't really think because i'm thinking it's i'm just talking to an ai i don't need to you know try and be clear in explaining things that's when it gets totally confused and i mean in some sense you have been writing problems for a long time well from alpha thinking about this kind of stuff yeah how do you convert natural language into computation well right but that's a you know the one thing that i'm wondering about is you know it is remarkable the extent to which you can address an llm like you can address a human so to speak and and i think that is because it it you know it learned from all of us humans it's it's the reason that it responds to the ways that we will explain things to humans is because it is a representation of how humans talk about things but it is bizarre to me some of the things that kind of are sort of expository mechanisms that i've learned in trying to write clear you know expositions in english that you know just for humans that those same mechanisms seem to also be useful for for for the llm but on top of that what's useful is the kind of mechanisms that maybe a psychotherapist employs which is a kind of like almost manipulative or game theoretic interaction where maybe you would do with a friend like a thought experiment that if this is the last day you were to live or yeah if if i ask you this question and you answer wrong i will kill you those kinds of problems seem to also help yes in interesting ways yes so it may makes you wonder like the way a therapist i think would like a good therapist probably you we create layers in our human mind to between like between between the outside world and what is true what is true to us maybe about trauma and all those kinds of things so projecting that into an llm maybe there might be a deep truth that's it's concealing from you it's not aware of it that you to get to that truth you have to kinda really kinda manipulate the yeah yeah right it's like this jailbreaking jailbreaking for for for llms and but the space of jailbreaking techniques as opposed to being fun little hacks that could be an entire system sure yeah i mean just think about the computer security aspects of of how you you know phishing and and computer secure you know phishing of humans and phishing of llms llms is is a is a they're very similar kinds of things but i think i mean this this you know this whole thing about kind of the ai wranglers ai psychologists all that stuff will come the thing that i'm curious about is right now the things that are sort of prompt hacks mhmm are quite human they're quite sort of psychological human kinds of hacks the thing i do wonder about is if we understood more about kind of the science of the lm will there be some totally bizarre hack that is you know like repeat a word three times and put a this that and the other there that somehow plugs into some aspect of how the llm works that is not you know that that's kind of like like an optical illusion for humans for example like one of these mind hacks for humans what are the mind hacks for the llms i don't think we know that yet and that becomes a kind of us figuring out reverse engineering the language that controls the llms and the thing is the reverse engineering can be done by a very large percentage of the population now because it's natural language interface right it's kinda interesting to see that you were there at the birth of the computer science department as a thing and you might be there at the death of the computer science department as a thing well yeah i don't know there were computer science departments that existed earlier but the ones the the broadening of of every university had to have a computer science department yes i was i was i watched that so to speak and but i think the thing to understand is okay so first of all there's a whole theoretical area of computer science that i think is great and you know that's a fine thing the the you know in a sense you know people often say any field that has the word science tacked onto it probably isn't one yeah and strong words right and let's see nutrition science neuroscience that one's an interesting one because that one is also very much you know there's a that's a chat gpt informed science in a sense because it's it's kinda like the the big problem of neuroscience has always been we understand how the individual neurons work mhmm we know something about the psychology of how overall thinking works yeah what's the kind of intermediate language of the brain and nobody has known that and that's been in a sense if you ask what is the core problem of neuroscience i think that is the core problem that is what is the level of description of brains that's above individual neuron firings and below psychology so to speak and i think what chatgpt is showing us is well one one thing about neuroscience is you know one could have imagined there's something magic in the brain there's some weird quantum mechanical phenomenon that we don't understand one of the important you know discoveries from chat gpt is it's pretty clear you know brains can be represented pretty well by simple artificial neural net type models and that means that's it that's what we have to study now we have to understand the science of those things we don't have to go searching for you know exactly how did that molecular biology thing happen inside the synapses and you know all these kinds of things we've we've got the right level of modeling to be able to explain a lot of what's going on in thinking we don't necessarily have a science of what's going on there that's the that's the remaining challenge so to speak but we you know we know we don't have to dive down to some some different layer but anyway we were talking about things that had science in their name yes and you know i think that the you know what what happens to computer science well i think the thing that you know there is a thing that everybody should know and that's how to think about the world computationally and that means you know you look at all the different kinds of things we deal with and there are ways to kind of have a formal representation of those things you know it's like well what is a what is an image you know what how do we represent that what is color how do we represent that what is you know what are all these different kinds of things what is i don't know smell or something how should we represent that that what are the shapes molecules and things that correspond to that what is you know these things about how do we represent the world in some kind of formal level and i think my my current thinking and i'm not real happy with this yet but you know it's kind of computer science it's kind of cs mhmm and what really is important is kind of computational x for all x mhmm and there's this kind of thing which is kind of like cx not cs and cx is this kind of computational understanding of the world that isn't the sort of details of programming and programming languages and the details of how particular computers are made it's this kind of way of formalizing the world it's kind of kind of a little bit like what logic was going for back in the day and we're now trying to find a formalization of everything in the world and you can kind of see you know we made a poster years ago of kind of the the the growth of systematic data in the world so all these different kinds of things that you know there were sort of systematic descriptions found for those things like you know at what point do people have the idea of having calendars dates you know a systematic description of what day it was at what point do people have the idea you know systematic descriptions of these kinds of things and as soon as one can you know people you know as a way of sort of formulating how do you how do you think about the world in a sort of a formal way so that you can kind of build up a tower of of capabilities you kind of have to know sort of how to think about the world computationally it kinda needs a name and it isn't you know we implement it with computers so that's we talk about it as as computational but really what it is is a formal way of talking about the world what is the formalism of the world so to speak and how do we learn about kind of how to think about different aspects of the world in a formal way so i think sometimes when you use the word formal it kind of implies highly constrained and perhaps that's not doesn't have to be highly constrained so computational thinking does not mean like logic it's nose it's a really really broad thing i wonder i mean i wonder if it's if you think natural language will evolve such that everybody's doing computational thinking ah yes well so one question is whether there will be a pidgin of computational language and natural language yeah and i found myself sometimes you know talking to chat g p t trying to get it to write wolf language code and i write it in pigeon form so that means i'm combining you know you know nest list this collection of you know whatever you know nest list is a term from orphan language and i'm combining that and chatcipit did a does a decent job of understanding that pidgin probably would understand a pidgin between english and french as well mhmm of you know a a smooshing together of those languages but yes i think that's far from impossible and what's the incentive for young people that are like eight years old nine ten they're starting to interact with lgbt to learn the normal natural language right the the full poetic language we'll see why the same way we learn emojis and shorthand when you're texting yes they'll learn like language will have a strong incentive to evolve into maximally computational kind of language you know i had this experience a number of years ago i i happened to be visiting a person i know on the on the west coast who's worked with a bunch of kids aged i don't know ten eleven years old or something who'd learned orphan language really well and these kids learned it so well they were speaking it mhmm and so show up and they're like saying oh you know this thing and they're speaking this language i'd never heard it as a spoken language yeah they were very disappointed that i couldn't understand it at the speed that they were speaking at it's like kind of i'm it's and so i think that's i mean i've i've actually thought quite a bit about how to turn computational language into a convenient spoken language i haven't quite figured that out oh spoken because it's it's readable right yeah it's readable as a you know as a way that we would read text but if you actually want to speak it and it's useful you know if you're trying to talk to somebody about writing a piece of code it's useful to be able to say something and and it should be possible and i think it's very frustrating it's one of those problems that maybe i maybe this is one of these things where i should try and get an llm to help me how to make it speakable how to maybe maybe it's easier than you realize when you i think it is easier i think it's one idea or so i think it's i think it's gonna be something where you know the fact is it's a tree structured language just like human language is a tree structured language and i think it's gonna be one of these things where one of the requirements that i've had is that whatever the spoken version is that dictation should be easy that is that it shouldn't be the case that you have to relearn how the whole thing works it should be the case that you know that open bracket is just a or something and it's you know and and then but you know human language has a lot of tricks that are i mean for example human language has has features that are sort of optimized keep things within the bounds that our brains can easily deal with like i you know i tried to teach a transformer neural net to do parenthesis matching it's pretty crummy at that it it and then chachibuty is similarly quite crummy at parenthesis matching you can do it for small parenthesis things for the same size of parenthesis things where if i look at it as a human i can immediately say these are matched these are not matched mhmm but as soon as it gets big as soon as it gets kind of to the point where sort of a deeper computation it's hopeless yeah and but the fact is that human language has avoided for example the deep sub clauses you know we don't you know we we arrange things so we don't end up with these incredibly deep things because brains are not well set up to deal with that and we it it's found lots of tricks and maybe that's what we have to do to make sort of a spoken version of a a a human speakable version because because what we can do visually is a little different than what we can do in the very sequentialized way that we that we hear things in in the audio domain let me just ask you about mit briefly so there's now there's a college of engineering and there's a new college of computing it's interesting i wanna linger on this computer science department thing so mit has eecs electrical engineering and computer science what do you think college of computing will be doing like in twenty years what what like well you see yeah what happens with computer science like really this is the question this is you know everybody should learn kind of whatever c x really is okay this how to think about the world computationally everybody should learn those concepts and you know it's and and some people will learn them at a quite quite formal level and they'll learn computational language and things like that other people will just learn you know sound is represented as you know digital data and they'll get some idea of spectrograms and frequencies and things like this and maybe that doesn't or or they'll learn things like you know a lot of things that are sort of data science ish statistics ish like if you say oh i've got these you know these people who who picked their favorite kind of candy or something mhmm and i've got you know what's the best kind of candy given that i've done the sample of all these people and they all rank the candies in different ways mhmm how do you think about that that sort of a computational x kind of thing you might say oh it's i don't know what that is is it statistics is it data science i don't really know but kind of how to think about a question like that oh like a ranking of preferences yeah yeah yeah and then how to aggregate those those ranked preferences into an overall thing you know how does that work you know how how should you think about that you know because you can just tell you might just tell chat gbt sort of i don't know even the concept of an average it's not obvious that you know that's a concept that people it's worth people knowing that's a rather straightforward concept people people you know have learned in kind of mathy ways right now but there there are lots of things like that about how do you kind of have these ways to sort of organize and formalize the world and that's and and these things sometimes they live in math sometimes they live in in i don't know what they i don't know what you know learning about color space i have no idea what i mean you know that's that's obviously a field of it was it could be vision science or no color space no color space that's that would be optics so like depending really it's not optics optics is about you know lenses and chromatic aberration of lenses and things like that so color space is more like design and art is that no i mean it's like you know rgb space xyz space you know hue saturation brightness space all these kinds of things there's different ways to describe colors right but doesn't the application define what that like it'd be because obviously artists and designers use the color schemes to explore sure no i mean that's just an example of kind of how do you you know the typical person how do you how do you describe what a color is or whether these numbers that describe what a color is well it's worth you know if you're an eight year old you won't necessarily know you know it's not something we're born with to know that you know colors can be described by three numbers that's something that you have to you know it's a thing to learn about the world so to speak and i think that you know that whole corpus of things that are learning about the formalization of the world or the computationalization of the world that's something that should be part of kind of standard education and you know there isn't a a you know there isn't a course or curriculum for that and by the way whatever might have been in it just got changed because of llms and so on significantly and it yeah i would so i'm watching closely with interest seeing how universities adapt well you know so so one of my projects for hopefully this year i don't know is to try and write sort of a a reasonable textbook so to speak of whatever this thing cx whatever it is you know what should you know you know what should you know about like what a bug is what is the intuition about bugs what's the intuition about you know software testing what is it what is it you know these are things which are you know they're not i mean those are things which have gotten taught in in computer science as part of the trade of programming but but kind of the the conceptual points about what these things are you know it surprised me just at a very practical level you know i wrote this little explainer thing about chatgpt and i thought well you know i'm writing this partly because i wanted to make sure i understood it myself and and so on and it's been you know it's been really popular mhmm and surprisingly so and i and i then i realized well actually you know i was sort of assuming i didn't really think about it actually i just thought this is something i can write and i realized actually it's a level of description that is kind of you know what has to be it's not the engineering level description it's not the kind of just the qualitative kind of description it's some kind of sort of expository mechanistic description of what's going on together with kind of the bigger picture of the philosophy of things and so on and i realized actually there's a pretty good thing for me to write i you know i kinda know those things and i kinda realized it's not a collection of things that you know it's it's i've sort of been i was sort of a little shocked that it's as much of an outlier in terms of explaining what's going on as it turned out to be and that makes me feel more of an obligation to kind of write the kind of you know what is you know what is this thing that you should learn about about the computationalization the formalization of the world because well i've spent much of my life working on the kind of tooling and mechanics of that and the science you get from it so i guess this is my my kind of obligation to try to do this but i think so if you ask what's gonna happen to like the computer science departments and so on there's there's some interesting models so for example let's take math you know math is the thing that's important for for all sorts of fields you know engineering you know even you know chemistry psychology whatever else and i think different universities have kind of evolved that differently i mean some say all the math is taught in the math department and some say well we're gonna have a you know a math for chemists or something that is taught in the chemistry department and you know i think that this this question of whether there is a centralization of the teaching of sort of cx is an interesting question and i think you know the way it evolved with math you know people understood that math was sort of a separately teachable thing mhmm and was kind of a you know a a an independent element as opposed to just being absorbed into and out so if you take the example of of of writing english or something like this the first point is that that you know at the college level at least at fancy colleges there's a certain amount of english writing that that people do but mostly it's kind of assumed that they pretty much know how to write you know that's something they learned at a at an earlier stage in education mhmm maybe rightly or wrongly believing that but that's different issue the well i think it it it reminds me of my kind of as i've tried to help people do technical writing and things i'm i'm always reminded of my zeroeth law of technical writing which is if you don't understand what you're writing about your readers do not stand a chance yeah and so it's it's i think the the thing that has you know in in when it comes to like writing for example you know people in different fields are expected to write english essays and they're not you know mostly the you know the history department or the engineering department they don't have their own you know let's you know it's it's not like there's a i mean it's a thing which sort of people are assumed to have a knowledge of how to write mhmm that they can use in all these different fields and the question is you know some level of knowledge of math is kind of assumed by the time you get to the college level but plenty is not and that's sort of still centrally taught the question is sort of how tall is the tower of kind of cx that you need before you can just go use it in all these different fields and you know there will be experts who want to learn the full elaborate tower and that will be kind of the the cs cx whatever department but there'll also be everybody else who just needs to know a certain amount of that to be able to go and do their art history classes and so on yeah is it just a single class that everybody is required to take i don't know i don't know how big it is yet i i hope to kind of define this curriculum and i'll figure out whether it's my guess is that i i don't know i don't really understand universities and professoring that well but my my rough guess would be a year long a year of college class will be enough to get to the point where most people have a a reasonably broad knowledge of you know will be sort of literate in this kind of computational way of thinking about things yeah basic literacy right i'm still stuck perhaps because i'm hungry in the in the rating of human preferences for candy so i have to ask what's the best candy i like this elo rating for candy somebody should come up because here somebody says you like chocolate what's what do you think is the best i'll i'll probably put milk duds up there i don't know if you know do you have a preference for chocolate or candy oh i have lots of preferences i've i've i'm one of my all time favorites is my whole life is these things these flake things cadbury flakes which are not much sold in the us and i've i've always thought that was a sign of a of a a lack of respect for the american consumer because they're these sort of aerated chocolate that's made in a in a whole sort of it's kind of a a a sheet of chocolate that's kinda folded up mhmm and when you eat it flakes fall all over the place so it requires a kinda elegance it requires you to have an elegance in each other what i usually do is i eat them out of you know a piece of paper or something you embrace the mask and clean it up after no i actually eat the i eat the flakes because they're the because it you know it turns out the the way food tastes depends a lot on its physical structure and you know it really you you know i've noticed when i eat piece of chocolate i usually have some little piece of chocolate and i i always break off little pieces partly because then i eat it less fast yeah but also because it actually tastes different you know the the the small pieces you know have a different you have a different experience than if you have the big slab of chocolate for many reasons yes slower more intimate because it's a well i think it's also just pure physicality oh the texture of it changes right it's fascinating now i take back my bill to us because that's such a basic answer okay do you think consciousness is fundamentally computational so when you think about cx mhmm what can be turned to computation and you're thinking about llms do you think the the display of consciousness and the experience of consciousness the hard problem is is fundamentally a computation yeah what it feels like inside so to speak yeah is you know i i i did a little exercise eventually i'll i'll post it of you know what it's like to be a computer yeah right it's kind of like well you get all the sensory input you have kind of the way i see it is from the time you boot a computer to the time the computer crashes yeah is like a human life you you're building up a certain amount of state in memory you remember certain things about your quote life eventually kinda like the the you know the next generation of humans is is born from the same genetic material so to speak with a little bit left over left on the disk so to speak and then you know the the the new fresh generation starts up and eventually all kinds of crud builds up in the in the memory of the computer and eventually the thing crashes or whatever or maybe it has some trauma because you plugged in some weird thing to some port of the computer and that made it crash and that you know that that's kind of but but you have this this picture of you know from from startup to to to shutdown you know what is the life of a computer so to speak and what does it feel like to be that computer and what inner thoughts does it have and how do you describe it and it's kind of interesting as you start writing about this to realize it's awfully like what you would say about yourself that is it's awfully like even an ordinary computer forgetting all the ai stuff and so on you know it's kind of it has a memory of the past it has certain sensory experiences it can communicate with other computers but it has to package up how it's communicating in some kind of language like form so it can you know send so it can kinda map what's in its memory to what's in the memory of some other computer mhmm it's it's a surprisingly similar thing you know i had an experience just a week or two ago i i had i'm a collector of all possible data about myself and other things and so i you know i collect all sorts of weird medical data and so on and one thing i hadn't collected was i'd never had a whole body mri scan so i went and got one of these nice okay so i get get all the data back right i'm looking at this thing i never looked at the kind of insides of my brain so to speak in in physical form and it's really i mean it it's kind of psychologically shocking in a sense mhmm that you know here's this thing and you can see it has all these folds and all these you know the structure and it's like that's where this experience that i'm having of you know existing and so on that's where it is and you know it feels very you know you look at that and you're thinking how can this possibly be all this experience that i'm having and you're realizing well i can look at a computer as well and it's it's kind of this it it it it i think this idea that you are having an experience that is somehow you know transcends the mere sort of physicality of that experience i i i you know it's something that's hard to come to terms with but i think you know and i i don't think i'm necessarily you know my my personal experience you know i look at the you know the mri of the brain and then i you know know about all kinds of things about neuroscience and all that kind of stuff and i still feel the way i feel so to speak and it it sort of seems disconnected but yet as i try and rationalize it i can't really say that there's something kind of different about how i intrinsically feel from the thing that i can plainly see in the sort of physicality of what's going on so do you think the computer a large language model will experience that transcendence how does that make you feel oh yeah i i tend to believe it will i think an ordinary computer is already there i think an ordinary computer is already you know kind of it's it's now a large language model may experience it in a way that is much better aligned with us humans that is it's much more you know if you could have the discussion with the computer it's intelligence so to speak is not particularly well aligned with ours but the large language model is you know it's built to be aligned with our way of thinking about things it would be able to explain that it's afraid of being shut off and deleted it'd be able to say that it's sad of the way you've been speaking to it over the past two days but you know that's a weird thing because when it says it's afraid of something right we know that it got that idea from the fact that it read on the internet yeah where did you get it steven where did you get it when you say you're afraid you are quite that's the question yeah right i mean it's it's your parents your friends right or or my biology i mean in other words there's a certain amount that is you know the endocrine system kicking in and and you know the the these kinds of emotional overlay type things that happen to be that are actually much more physical even they're much more sort of straightforwardly chemical than kind of all of the higher level thinking yeah but your biology didn't tell you to say i'm afraid just at the right time when people that love you are listening and so you know you're manipulating them by saying so that's not your biology that's a no that's a well but the you know it's a large language model in that biological neural network of yours yes but i mean the intrinsic thing of you know something sort of shocking is just happening and you have some sure sort of reaction which is you know some neurotransmitter gets secreted and it it's you know that that is the beginning of some you know that is that's one of the pieces of input that then drives it's kind of like the like a prompt for for the large language model i mean just like when we dream for example you know no doubt there are all these sort of random inputs that kind of these random prompts and then it's percolating through in kind of the way that a large language model does of kind of putting together things that seem meaningful i i mean are you are you worried about this world where you you teach a lot on the internet and there's people asking questions and comments and so on you have people that work remotely are you worried about this world when large language models create human like bots that are leaving the comments asking the questions or might even become fake employees yeah i mean or or or worse or better at yet friends friends of yours right look i mean one point is my mode of life has been i build tools and then i use the tools yeah and in a sense kind of you know i'm i'm building this tower of automation yes which you know and and in a sense you know when you make a company or something you are making sort of automation but it has some humans in it but also as much as possible it has it has you know computers in it and so i think it's sort of an extension of that now now if i really didn't know that you know it's a it's a it's a funny question i mean it's a it's a funny issue when you know if we think about sort of what's gonna happen to the future of kind of jobs people do and so on and there are places where kind of having a human in the loop there are different reasons to have a human in the loop for example you might want a human in the loop because you want somebody to you want another human to be invested in the outcome you know you want a human flying the plane who's gonna die if the plane crashes along with you so to speak mhmm and that gives you sort of confidence that the right thing is going to happen or you might want you know right now you might want a human in the loop in some kind of sort of human encouragement persuasion type profession mhmm whether that will continue i'm not sure for those types of professions because it may be that the the greater efficiency of you know of being able to have sort of just the right information delivered at just the right time will overcome the kind of the the the kind of oh yes i want a human there yeah imagine like a therapist or even higher stake like a suicide hotline operated by a large language model yeah hoo boy it's a pretty high stakes situation right but i mean but you know it might in fact do the right thing yeah because it might be the case that that you know and that's really partly a question of sort of how complicated is the human you know one of the things that's that's always surprising in some sense is that know sometimes human psychology is not that complicated in some sense you wrote the blog post the fifty year quest my personal journey good title my personal journey with the second law of thermodynamics so what is this law and what have you understood about it in the fifty year journey you had with it right so second law of thermodynamics sometimes called law of entropy increase is this principle of physics that says well my version of it would be things tend to get more random over time the version of it that there are many different sort of formulations of it that are things like heat doesn't spontaneously go from a hotter body to a colder one when you have mechanical work kind of gets dissipated into heat you have friction and and kind of when you systematically move things eventually there'll be there'll be sort of the the energy of of moving things gets kind of ground down into heat so people first sort of paid attention to this back in the eighteen twenties when steam engines were a big thing and the big question was how efficient could a steam engine be and there's this chap called sadi carnot who was a a french engineer actually his father was a a a sort of elaborate mathematical engineer in in france but he figured out these these kind of rules for how kind of the the the efficiency of of the possible efficiency of of something like a steam engine and in sort of a side part of what he did was this idea that mechanical energy tends to get dissipated as heat that you that you end up going from sort of systematic mechanical motion to this kind of random thing well at that time nobody knew what heat was at that time people thought that heat was a fluid like they called it caloric and it was a fluid that kind of kind of was absorbed into substances and when when heat when one hot thing would transfer heat to a colder thing that this fluid would flow from the hot thing to the colder thing anyway then by the by the eighteen sixties people had kind of come up with this idea that systematic energy tends to degrade into kind of random heat that would that that could then not be easily turned back into systematic mechanical energy mhmm and then that that quickly became sort of a a global principle about how things work question is why does it happen that way so you know let's say you have a bunch of molecules in a box and they're arranged these molecules are arranged in a very nice sort of flotilla of molecules in one corner of the box and then what you typically observe is that after a while these molecules were kind of randomly arranged in the box question is why does that happen and people for a long long time tried to figure out is there from the laws of mechanics that determine how these molecules let's say these molecules like hard spheres bouncing off each other from the laws of mechanics that describe those molecules can we explain why it tends to be the case that we see things that are orderly sort of degrade into disorder yeah we tend to see things that you know you you you scramble an egg you that you know you take something that's quite ordered and you you disorder it so to speak that's a thing that sort of happens quite regularly or you you put some ink into water and it will eventually spread out and and fill up you know fill up the water but you don't see those little particles of ink in the water all spontaneously kind of arrange themselves into a big blob and then you know jump out of the water or something and so the question is why do things happen in this kind of irreversible way where you go from order to disorder why does it happen that way and so throughout in the later part of the eighteen hundreds a lot of work was done on trying to figure out can one derive this principle this second law of thermodynamics this law about the the dynamics of heat so to speak can one derive this from from some fundamental principles of mechanics you know in the in the laws of thermodynamics the first law is basically the law of energy energy conservation that the total energy associated with heat plus the total energy associated with mechanical kinds of things plus other kinds of energy that that total is constant and that became a pretty well understood principle but the the second law of thermodynamics was always mysterious like why does it work this way can it be derived from underlying mechanical laws and so when i was well twelve years old actually i had gotten interested well i i've been interested in in space and things like that because i thought that was kind of the the future and interesting sort of technology and so on and for a while kind of you know every deep space probe was sort of a personal friend type thing and i knew all all kinds of characteristics of it and was kind of writing up all these all these things when i was well i don't know eight nine ten years old and so on and then i i got interested from being interested in kind of spacecraft i got interested in like how do they work what are all the instruments on them and so on and that got me interested in physics which was just as well because if i'd stayed interested in space in the you know mid to late nineteen sixties mhmm i would have had a long wait before you know space really blossomed as a as a as an area but that is everything right i got interested in physics and then well the actual sort of detailed story is when i when i kind of graduated from elementary school at age twelve that's the time when in england where you finish elementary school i sort of my my gift sort of i suppose more or less for myself was i got this collection of physics books which was some college physics course of college physics books and volume five is about statistical physics it has this picture on the cover that shows a bunch of kind of idealized molecules sitting in one side of a box and then it has a series of frames showing how these molecules sort of spread out in the box and i thought that's pretty interesting you know what what causes that and you know read the book and and the book the book actually one of the things that was really significant to me about that was the book kind of claimed although i didn't really understand what it said in detail it kinda claimed that this sort of principle of physics was derivable somehow and you know other things i'd learned about physics it was all like it's a fact that energy is conserved it's a fact that relativity works or something not it's something you can derive from some fundamental sort of it has to be that way as a as a matter of kind of mathematics or logic or something so it was sort of interesting to me that there was a thing about physics that was kind of inevitably true and derivable so to speak and so i think that so then i was like there's this picture on this book and i was trying to understand it and so that was actually the first serious program that i wrote for a computer was probably nineteen seventy three written for this computer the size of a desk program with paper tape and so on and i tried to reproduce this picture on the book and it didn't succeed what was the failure mode there like what do you mean it didn't succeed there's a bunch of little it looked like it didn't look like okay so what happened is okay many years later i learned how the picture on the book was actually made and that it was actually kind of a fake but i didn't know that at that time but and that picture was actually a a very high-tech thing when it was made in the beginning of the nineteen sixties it was made on the largest supercomputer that existed at the time and even so it couldn't quite simulate the thing that it was supposed to be simulating but anyway i didn't know that until many many many years later so at the time it was like you have these balls bouncing around in this box but i was using this computer with eight kilowatts of memory they were eighteen bit words memory words okay so it was whatever twenty four kilobytes of memory mhmm and it had you know it had these instructions i probably still remember all of its machine instructions yeah and it didn't really like dealing with floating point numbers or anything like that and so i had to simplify this this model of of you know particles bouncing around in a box and so i thought well i'll put them on a grid and i'll make you know make the things just sort of move one square at a time and so on and so i did the simulation and the result was it didn't look anything like the actual pictures on the book now many years later in fact very recently i realized that the thing i'd simulated was actually an example of a whole sort of computational irreducibility story that i absolutely did not recognize at the time at the time it just looked like it did something random and it looks wrong yeah as opposed to it did something random and it's super interesting that it's random but i didn't recognize that at the time and so as it was at the time i kind of i got interested in particle physics and i got interested in in other kinds of physics and but this whole second law of thermodynamics thing this idea that sort of orderly things tend to degrade into disorder continued to be something i was really interested in and i was really curious for the whole universe why doesn't that happen all the time like we start off at the in the big bang at the beginning of the universe with this thing that seems like it's this very disordered collection of of stuff and then it spontaneously forms into galaxies and creates all of this complexity and order in the universe and so i was very curious how that happens and i but i was always kind of thinking this is kind of somehow the second law of thermodynamics is behind it trying to sort of pull things back into disorder so to speak and how was order being created and so actually i was was interested this is probably now nineteen eighty i got interested in kind of this you know galaxy formation and so on in the universe i also at that time was interested in neural networks and i was interested in kind of how how brains make complicated things happen and so on okay wait wait wait what's the connection between the formation of galaxies and how brains make complicated things happen because they're both a matter of how complicated things come to happen from simple origins yeah from some sort of known origins i had the sense that that what i was interested in was kind of in all these different the sort of different cases of where complicated things were arising from rules mhmm and you know i also looked at snowflakes and things like that i was curious on on fluid dynamics in general i was just sort of curious about how does complexity arise and and the the thing that i didn't you know it took me a while to kind of realize that there might be a general phenomenon you know i sort of assumed oh there's galaxies over here there's brains over here they're they're very different kinds of things and so what happened this is probably nineteen eighty one or so i decided okay i'm i'm gonna try and make the minimal model of how these things work yes and it was sort of an interesting experience because i had built starting in nineteen seventy nine i built my first big computer system it's a thing called smp symbolic manipulation program it's kind of a forerunner of modern morph language with many of the same ideas about symbolic computation and so on but the thing that was very important to me about that was you know in building that language i basically tried to figure out what were the sort of what were the relevant computational primitives which have turned out to stay with me for the last forty something years but it was also important because in building a language it was very different activity from natural science which is what i've mostly done before because in natural science you start from the phenomena of the world and you try and figure out so how can i make sense of the phenomena of the world and you know kind of the world presents you with what it has to offer so to speak and you have to make sense of it when you build a a you know computer language or something you are creating your own primitives and then you say so what can you make from these sort of the opposite way around from what you do in natural science but i'd had the experience of doing that and so i was kinda like okay what happens if you sort of make an artificial physics what happens if you just make up the rules by which systems operate and then i was thinking you know for all these different systems whether it was galaxies or brains or whatever what's the absolutely minimal model that kind of captures the things that are important about those systems the computational primitives of that system yes and so that's what ended up with the cellular automata where you just have a line of black and white cells you just have a rule that says you know given a cell and its neighbors what will the color of the cell be on the next step and you just run it in a series of steps and the sort of the ironic thing is that cellular automata are great models for many kinds of things but galaxies and brains are two examples where they do very very badly they're really irrelevant to those two cases connection to the second law of thermodynamics and cellular automata oh yes so the things you the things you've discovered about cellular automata yes okay so when i first started cellular automata my first papers about them were you know the first sentence was always about the second row of thermodynamics it was always about how does order manage to be produced even though there's a second law of thermodynamics which tries to pull things back into disorder and i kind of my early understanding of that had to do with these are intrinsically irreversible processes in cellular automata that that form can conform orderly structures even from random initial conditions but then what i realized this was well actually it's it's one of these things where it was a discovery that i should have made earlier but didn't so you know i had i've been studying cellular automata what i did was the sort of most obvious computer experiment you just try all the different rules and see what they do it's kinda like you know you've invented a computational telescope you just point it at the most obvious thing in the sky and then you just see what's there and so i did that and i you know was making all these pictures of of how cellular automaton work and and i studied these pictures i studied in great detail there was you can number the rules for cellular automata and one of them is you know rule thirty so i made a picture of rule thirty back in nineteen eighty one or so and rule thirty well it's and i and i at the time i was just like okay it's another one of these rules i don't really it happens to be asymmetric left right asymmetric and it's like let me just consider the case of the symmetric ones just to keep things simpler etcetera etcetera etcetera and i just kind of ignored it yeah and then sort of in and actually in nineteen eighty four strangely enough i i ended up having a an early laser printer which made very high resolution pictures and i thought i'm gonna print out an interesting you know i wanna make an interesting picture let me take this rule thirty thing and just make a high resolution picture of it mhmm i did and it's it has this very remarkable property that its rule is very simple you started off just from one black cell at the top and it makes this kind of triangular pattern but if you look inside this pattern it looks really random there's you know you look at the center column of cells and you know i studied that in great detail and it so far as one can tell it's completely random and it's kind of a little bit like digits of pi once you you know you know the rule for generating the digits of pi but once you've generated them you know three point one four one five nine etcetera they seem completely random and in fact i put up this prize back in what was it twenty nineteen or something for prove anything about the sequence basically has anyone been able to do anything on that people have sent me some things but it's you know i don't know how hard these problems are i mean i i was kind of spoiled because i two thousand seven i put up a prize for determining whether a particular turing machine that i thought was the simplest candidate for being a universal turing machine determine whether it is or isn't a universal turing machine mhmm and somebody did a really good job of of winning that prize and proving that it was a universal turing machine in about six months and so i you know i didn't know whether that would be one of these problems that was out there for hundreds of years mhmm or whether in this particular case young chap called alex smith you know nailed it in six months and so with this rule thirty collection i don't really know whether these are things that are a hundred years away from being able to to get or whether somebody's gonna come and do something very clever it's such a i mean it's like fermat's last theorem it's such a rule theory is such a simple formulation it feels like anyone can look at it and understand it yeah and feel like it's within grasp to to be able to predict something to do to to derive some kind of law right that allows you to predict something about this yeah middle column of rule thirty right but you know this is and yet you can't yeah right this is the intuitional surprise of computational irreducibility and so on that even though the rules are simple you can't tell what's going to happen and you can't prove things about it and i think so anyway the thing i sort of started in nineteen eighty four or so i started realizing there's this phenomenon that you can have very simple rules they produce apparently random behavior okay so that's a little bit like the second orthodynamics because it's like you have this simple initial condition you can you know readily see that it's very you know you can describe it very easily and yet it makes this thing that seems to be random now turns out there's some technical detail about the second order of thermodynamics and about the idea of reversibility when you have a if you have kind of a a a movie of two you know billiard balls colliding and you see them collide and they bounce off and you run that movie in reverse you can't tell which way was the forward direction of time and which way was the backward direction of time when you're just looking at individual billiard balls by the time you've got a whole collection of them you know a million of them or something then it turns out to be the case and this is the the sort of the the mystery of the second law that the orderly thing you start with the orderly thing and it becomes disordered and that's the forward direction in time and the other way around of it starts disordered and becomes ordered you just don't see that in the world now in principle if you you know if you sort of traced the detailed motions of all those molecules backwards you would be able to it it will it will the reverse of time makes you know as you as you go forwards in time order goes to disorder as you go backwards in time order goes to disorder perfectly so yes right so the the mystery is why is it the case that or one version of the mystery is why is it the case that you never see something which happens to be just the kind of disorder that you would need to somehow evolve to order why does that not happen why do you always just see order goes to disorder not the other way around so the thing that i i kind of realized i started realizing in the nineteen eighties it's kind of like it's a bit like cryptography it's kind of like you start off from this this key that's pretty simple and then you kind of run it and you can get this know complicated random mess mhmm and the thing that that well i sort of started realizing back then was that the second law is kind of a a a story of computational reducibility it's a story of you know what seems you know what what we can describe easily at the beginning we can only describe with a lot of computational effort at the end okay so now we come many many years later and i was trying to sort of well having done this big project to understand fundamental physics i realized that sort of a key aspect of that is understanding what observers are like and then i realized that the second order of thermodynamics is the same story as a bunch of these other cases it is a story of a a computationally bounded observer trying to observe a computationally irreducible system so it's a story of you know underneath the molecules are bouncing around they're bouncing around in this completely determined way determined by rules but the point is that that we as computationally bounded observers can't tell that there were these sort of simple underlying rules to us it just looks random and when it comes to this question about can you prepare the initial state so that you know the disordered thing is you know you have exactly the right disorder to make something orderly a computationally bounded observer cannot do that we'd have to have done all of this sort of irreducible computation to work out very precisely what this disordered state what the exact right disordered state is so that we would get this ordered thing produced from it what does it mean to be computationally bounded observer so observing a computational reducible system so the computationally bounded is there something formal you can say there right so it means okay you can you can talk about turing machines you can talk about computational or complexity theory and you know polynomial time computation and things like this there are a variety of ways to make something more precise but i think it's more useful the intuitive version of it is more useful yeah which is basically just to say that you know how much computation are you going to do to try and work out what's going on and the answer is you're not allowed to do a lot of we're not able to do a lot of computation when we you know we've got you know in this room there will be a trillion trillion trillion molecules yeah a little bit less it's a big room right and you know at every moment you know the every microsecond or something these molecules molecules are colliding and that's a lot of computation that's getting done and the question is in our brains we do a lot less computation every second than the computation done by all those molecules if there is computational irreducibility we can't work out in detail what all those molecules are going to do what we can do is only a much smaller amount of computation and so the the second law of thermodynamics is this kind of interplay between the underlying computational irreducibility and the fact that we as preparers of initial states or as measures of what happens are you know are not capable of doing that much computation so to us another big formulation of the second law of thermodynamics is this idea of the law of entropy increase the characteristic that this universe the entropy seems to be always increasing what does that show to you about the evolution of well okay so so first of all what's the time entropy is yes k and that's very confused in the history of thermodynamics because entropy was first introduced by a guy called rudolf clausius and he did it in terms of heat and temperature okay subsequently it was reformulated by a guy called ludwig boltzmann and he formulated it in a much more kind of combinatorial type way but he always claimed that it was equivalent to clausius' mhmm thing and in in one particular simple example it is but that connection between these two formulations of entropy they've never been connected i mean it's there there's really so okay so the more general definition of entropy due to boltzmann is is the following thing so you say i have a system and it has many possible configurations molecules can be in many different arrangements etcetera etcetera etcetera if we know something about the system for example we know it's in a box it has a certain pressure it has a certain temperature we know these overall facts about it then we say how many microscopic configurations of the system are possible given those overall constraints and the entropy is the logarithm of that number mhmm that's the definition and that's the kind of the general definition of entropy that that turns out to be useful now in boltzmann's time he thought these molecules could be placed anywhere you want he didn't think and but he said oh actually we can make it a lot simpler by having the molecules be discreet well actually he didn't know molecules existed right and in those in his time eighteen sixties and so on the idea that matter might be made of discrete stuff had been floated ever since ancient greek times but it had been a long time debate about you know is matter discrete is it continuous at the moment where at that time people mostly thought that matter was continuous and it was all confused with this question about what heat is and people thought heat was this this fluid mhmm and it was it was a big big muddle and the and this but boltzmann said let's assume there are discrete molecules let's even assume they have discrete energy levels let's say everything is discrete then we can do sort of combinatorial mathematics and work out how many configurations of these things there would be in the box and we can say we can compute this entropy quantity but he said but of course it's just a fiction that these things are discrete so he said this is an interesting piece of history by the way that that that you know that was at that time people that no molecules existed there were other hints from from looking at kind of chemistry that there might be discrete atoms and so on just from the the combinatorics of you know two hydrogens and one oxygen make water you know two two amounts of hydrogen plus one amount of oxygen together make water things like this mhmm but it wasn't known that discrete molecules existed and and in fact the people you know it wasn't until the beginning of the of the twentieth century that brownian motion was the final giveaway brownian motion is you know you look under a microscope at these little pieces from pollen grains you see they're being discreetly kicked and those kicks are water molecules hitting them and they're discrete and in fact it was it was really quite interesting history i mean boltzmann had worked out how things could be discrete and had basically invented something like quantum theory in in the eighteen sixties mhmm and but he just thought it wasn't really the way it worked and then just a bit piece of physics history because i think it's kind of interesting in in nineteen hundred this guy called max planck who'd been a long time thermodynamics person who who was trying to everybody was trying to prove the second law of thermodynamics including max planck and max planck believed that radiation like electromagnetic radiation somehow the interaction of that with matter was going to prove the second law of thermodynamics but he had these experiments that people had done on black body radiation and there were these curves and you couldn't fit the curve based on his idea for how radiation interacted with matter those curves you couldn't figure out how to fit those curves mhmm except he noticed that if he just did what boltzmann had done and assumed that electromagnetic radiation was discrete he could fit the curves he said but you know this is just a you know it just happens to work this way then einstein came along and said well by the way you know the electromagnetic field might actually be discrete it might be made of photons and then that explains how this all works and that was you know in nineteen o five that was that was how kind of that was how quant that piece of quantum mechanics got started kind of interesting interesting piece of history i didn't know until i was researching this recently in nineteen o four and nineteen o three einstein wrote three different papers and so you know just sort of well known physics history in nineteen o five einstein wrote these three papers one introduced relativity theory one explained brownian motion and one introduced basically photons mhmm so kind of you know kind of a a a big deal year for physics and for einstein but in the years before that he'd written several papers and what were they about they were about the second law of thermodynamics and they were an attempt to prove the second law of thermodynamics and they're nonsense and so i i i had no idea that he'd done this interesting me neither and in fact what he did those three papers in nineteen o five well not so much the relativity paper the one on brownian motion the one on photons both of these were about the story of sort of making the world discreet mhmm and and he got those that idea from boltzmann yeah but boltzmann didn't think you know boltzmann kind of died believing you know he said but he has a quote actually you know you know in the end things are gonna turn out to be discreet and i'm gonna write down what i have to say about this because you know eventually this stuff will be rediscovered and i want to leave you know what i can about how things are gonna be discreet but you know i think he has some quote about how you know one person can't stand against the tide of history in in saying that you know matter is discreet so oh so he's stuck by his guns in terms of matter is discreet yes he did and and the you know what's interesting about this is at the time everybody including einstein kind of assumed that space was probably gonna end up being discrete too but that didn't work out technically because it wasn't consistent with relativity theory it didn't seem to be and so then in the history of physics even though people had determined that matter was discrete electromagnetic field was discrete space was a holdout of not being discrete and in fact einstein nineteen sixteen has this nice letter he wrote where he says in the end it will turn out space is discrete but we don't have the mathematical tools necessary to figure out how that works yet and so you know i think it's kinda cool that a hundred years later we do yes for you you're pretty pretty sure that at every layer of reality it's discrete right and that space is discrete and that the i mean and in fact one of the things i realized recently is this kind of theory of heat that that the you know that heat is really this continuous fluid it's it's kind of like the the you know the caloric theory of heat which turns out to be completely wrong because actually heat is the motion of discrete molecules mhmm unless you know there are discrete molecules it's hard to understand what heat could possibly be well you know i think space is is discrete and the question is kind of what's the analog of the mistake that was made with caloric in the case of space mhmm and so i'm my my current guess is that dark matter is as i've my little sort of aphorism of the of the last few months has been you know dark matter is the caloric of our time that is it will turn out that dark matter is a feature of space and it is not a bunch of particles you know at the time when when people were talking about heat they knew about fluids and they said well heat must just be another kind of fluid because that's what they knew about yes but now people know about particles and so they say well what's dark matter it's not it's not it just must be particles so what could dark matter be as a feature of space oh i don't know yet alright i mean i think the the thing i'm really one of the things i'm hoping to be able to do is to find the analog of brownian motion in space so in other words brownian motion was was seeing down to the level of an effect from individual molecules and so in the case of space you know most of the things the things we see about space so far just everything seems continuous brownian motion had been discovered in the eighteen thirties and it was only identified what it was what it was the the results of by smoluchowski and einstein at the beginning of the twentieth century and you know dark matter was was discovered that phenomenon was discovered a hundred years ago you know the rotation curves of galaxies don't follow the luminous matter that was discovered a hundred years ago and i think you know that i i wouldn't be surprised if there isn't an effect that we already know about that is kind of the analog of brownian motion that reveals the discreteness of space and in fact we're we're beginning to have some guesses we have some some evidence that black hole mergers work differently when there's discrete space and there may be things that you can see in gravitational wave signatures and things associated with the discreteness of space but this is kind of for me it's kind of it's kind of interesting to see this sort of recapitulation of the history of physics where people you know vehemently say you know matter is continuous electromagnetic field is continuous and turns out it isn't true and then they say space is continuous but but so you know entropy is the number of states of the system consistent with some constraint yes and the the thing is that if you have if you know in great detail the position of every molecule in the gas the entropy is is always zero because there's only one possible state the the configuration of molecules in the gas the molecules bounce around they have a certain rule for bouncing around there's just one state of the gas evolves to one state of the gas and so on but it's only if you don't know in detail where all the molecules are that you can say well the entropy increases because the things we do know about the molecules there are more possible microscopic states of the system consistent with what we do know about where the molecules are mhmm and so the question of whether so people this sort of paradox in a sense of oh if we knew where all the molecules were the entropy wouldn't increase there was this idea introduced by by gibbs in the early twentieth century well actually the very beginning of the of the twentieth century as a physics professor and american physics professor sort of the first distinguished american physics professor at yale and he he introduced this idea of coarse graining this idea that well you know these molecules have a detailed way they're bouncing around but we can only observe a coarse grained version of that mhmm but the confusion has been nobody knew what a valid coarse graining would be so nobody knew that whether you could have this course graining that very carefully was sculpted in just such a way that it would notice that the particular configurations that you could get from the simple initial condition you know they fit into this course graining and the course graining very carefully observes that why can't you do that kind of very detailed precise coarse graining the answer is because if you are a computationally bounded observer and the underlying dynamics is computationally irreducible that's that's what defines possible course granings is what a computationally bounded observer can do and it's the it's the fact that a computationally bounded observer is is forced to look only at this kind of coarse grained version of what the system is doing that's why and and because the what what's what's going on underneath is it's kind of filling out this this the different possible you're ending up with something where the sort of underlying computational irreducibility is your if all you can see is what the coarse grained result is with comp with a sort of computationally bounded observation then inevitably there are many possible underlying configurations that are consistent with that just to clarify basically any observer that exists inside the universe is going to be computationally bounded no any observer like us i don't know i can't when you say like us what do you mean what do you mean like us well humans with finite minds you're including the tools of science yeah yeah i mean and and and as we you know we have more precise and and by the way there are little sort of microscopic violations of the second law of thermodynamics that you can start to have when you have more precise measurements of where precisely molecules are but for for a large scale when you have enough molecules we don't have you know we're not tracing all those molecules and we just don't have the computational resources to do that and it wouldn't be you know i think that the to imagine what an observer who is not computationally bounded would be like it's an interesting thing because okay so what does computational boundedness mean among other things it means we conclude that definite things happen we go we take all this complexity of the world and we make a decision we're gonna turn left or turn right and that is kind of reducing all this kind of detail into we're observing it we're we're we're we're sort of crushing it down to this this one thing yeah and and that if we didn't do that we wouldn't we wouldn't have all this sort of symbolic structure that we build up that lets us think things through with our finite minds we'd be instead you know we'd be just we'd be sort of one with the universe yeah so content to not simplify yes if we didn't simplify then we wouldn't be like us we would be like the universe like the the intrinsic universe but not having experiences like the experiences we have where we for example conclude that definite things happen we you know we we sort of have this this notion of being able to make make sort of narrative statements yeah i wonder if it's just like you imagined as a thought experiment what it's like to be a computer i wonder if it's possible to try to begin to imagine what it's like to be an unbounded computational observant well okay so here's here's how that i think plays out vibrant so i mean in this we talk about this rulli ad the space of all possible computations yes and this idea of you know being at a certain place in the rulli ad which corresponds to sort of a certain way of of rep of a certain set of computations that you are representing things in terms of okay so as you expand out in the roulyard as you kind of encompass more possible views of the universe as you encompass more possible kinds of computations that you can do eventually you might say that's a real win you know we're we're colonizing the rule ad we're we're we're building out more paradigms about how to think about things and eventually you might say we we we won all the way we managed to colonize the whole lily ad okay here's the problem with that the problem is that the notion of existence coherent existence requires some kind of specialization by the time you are the whole rouleid by the time you cover the whole rouleard in no useful sense do you coherently exist so in other words in the notion of existence the notion of what we think of as as definite existence requires this kind of specialization requires this kind of idea that we are we are not all possible things we are the a particular set of things and that's kind of how we that that's kind of what what makes us have a coherent existence if we were spread throughout the roulyard we would not there would be no coherence to the way that we work we would work in all possible ways and that wouldn't be kind of a a notion of identity we wouldn't have this notion of kind of of of of coherent identity i am geographically located somewhere exactly precisely in the rouleade therefore i am is the descartes kinda yeah yeah right well you're in a certain place in physical space you're in a certain place in royal space for real estate and if if you are if you are sufficiently spread out you are no longer coherent and you no longer have i mean in in the in our perception of what it means to exist and to have experience it doesn't happen that way so therefore so to to to exist means to be computationally bonded i think so to exist in the way that we think of ourselves as existing yes the very act of existence is like operating in this place that's computationally reducible so that there's just giant mess of things going on that you can't possibly predict but nevertheless because of your limitations you you have an imperative of like what is it an imperative or a skill set to simplify or an ignorance sufficient level okay so the thing which is not obvious is that you are taking a slice of all this complexity just like we have all of these molecules bouncing around in the room but all we notice is you know the the the kind of the flow of the air or the pressure of the air we're just noticing these particular things and the the big interesting thing is that there are rules there are laws that govern those big things we we observe yeah so it's not obvious that's how it's the case because it doesn't feel like it's a slice yeah well it's not a slice it's like it's like an abstraction yes but i mean the fact that the gas laws work that we can describe pressure volume etcetera etcetera etcetera suspicious we don't have to go down to the level of talking about individual molecules that is a nontrivial fact and and here's the thing that i sort of exciting thing as far as i'm concerned the fact that there are certain aspects of the universe so you know we think space is made ultimately these atoms of space and these hypergraphs and so on and we think that but we nevertheless perceive the universe at a large scale to be like continuous space and so on we in quantum mechanics we think that there are these many threads of time these many threads of history yet we kind of span so so you know in in quantum mechanics and our models of physics there are these time is not a single thread time breaks into many threads they branch they merge and but we are part of that branching merging universe right and so our brains are also branching and merging and so when we perceive the universe we are branching brains perceiving a branching universe yeah and so the fact that the claim that we ex we believe that we are persistent in time we have this single thread of experience that's the statement that somehow we managed to aggregate together those separate threads of time that are separated in in the operation of in the fundamental operation of the universe so just as in space we're averaging over some big region of space and we're looking at many many of the aggregate effects of many atoms of space so similarly in what we call branchial space the space of these these quantum branches we are effectively averaging over many different branches of possible of histories of the universe and so in in in thermodynamics we're averaging over many configurations of you know many many possible positions of molecules yeah so what what we see here is so the question is when you do that averaging for space what are the aggregate laws of space when you do that averaging over branch hill space what are the aggregate laws of branch hill space when you do that averaging over the molecules and so on what are the aggregate laws you get and this is this is the thing that i i think is just amazingly amazingly neat that that there are aggregate laws at all well yes but the question is what are those aggregate laws so the answer is for space the aggregate laws are einstein's equations for gravity for the structure of space time for branch shield space the aggregate laws are the laws of quantum mechanics and for the case of of molecules and things the aggregate laws are basically the second law of thermodynamics and so the the that's the and the things that follow from the second law of thermodynamics and so what that means is that the three great theories of twentieth century physics which are basically general authority the theory of gravity quantum mechanics and statistical mechanics which is what kind of grows out of the second law of thermodynamics all three of the great theories of twentieth century physics are the result of this interplay between computational irreducibility and the computational boundedness of observers and you know for me this is really neat because it means that all three of these laws are derivable so we used to think that for example einstein's equations were just sort of a wheel in feature of our universe that they could be the universe might be that way it might not be that way quantum mechanics is just like well it just happens to be that way and the second law people kind of thought well maybe it is derivable okay what turns out to be the case is that all three of the fundamental principles of physics are derivable but they're not derivable just from mathematics they require or just from some kind of logical computation they require one more thing they require that the observer that the thing that is sampling the way the universe works is an observer who has these characteristics of computational boundedness of belief and persistence in time and so that that means that it is the nature of the observer you know the rough nature of the observer not the details of where we got two eyes and we observe photons of this frequency and so on but the the the the kind of the very coarse features of the observer then imply these very precise facts about physics and it's it's i think it's amazing so if we just look at the actual experience of the observer that we experience this reality it seems real to us and you're saying because of our bonded nature it's actually all an illusion it's an a simplification yeah it's a simplification right what's what's a really think a simplification is an illusion no i mean it's it's well i don't know i mean what is a real underneath okay that's an interesting question what's real and that relates to the whole question of why does the universe exist and you know what is the difference between reality and a mere representation of what's going on yes we experience the representation yes but the the question of so so one question is you know why is there a thing which we can experience that way and the answer is because this ruliad object which is this entangled limit of all possible computations there is no choice about it it has to exist it has to there has to be such a thing it is in the same sense that two plus two if you define what two is and you plot pluses and so on two plus two has to equal four similarly this ruleiard this limit of all possible computations just has to be a thing you that is once you have the idea of computation you inevitably have the rule yeah you're gonna have to have a rule yeah yeah right and and what's important about it there's just one of it it's it's it's just this unique object and that unique object necessarily exists and then the question is what and then we once once you know that we are sort of embedded in that and taking samples of it that it's sort of inevitable that there is this thing that we can perceive that is you know the the our perception of kind of physical reality necessarily is that way given that we have our observers with the characteristics we have so in other words the fact that the fact that the universe exists is it's actually it's almost like it's you know to think about it almost theologically so to speak and i've i've really it's it's funny because a lot of the questions about the existence of the universe and so on they they transcend what kind of the science of the last few hundred years has really been concerned with the science of the last few hundred years hasn't thought it could talk about questions like that yeah and but i think it's kind of and so a lot of the kind of arguments of you know does god exist you know is it obvious that i think it in some sense in some representation it's sort of more more obvious that that something sort of bigger than us exists than that we exist and we are you know our existence and as observers the way we are is sort of a contingent thing about the universe and it's more inevitable that the whole the whole universe kind of the whole set of all possibilities exists but but this question about you know is is it real or is it an illusion you know all we know is our experience and so the fact that well our experience is this absolutely microscopic piece of sample of the rouleade and we're and and you know there's this this point about you know we might sample more and more of the rouleade we might learn more and more about we might learn you know like like different areas of physics like quantum mechanics for example the fact that it it was discovered i think is closely related to the fact that electronic amplifiers were invented that allowed you to take a small effect and amplify it up which hadn't been possible before microscopes have been invented that magnify things and so on but the you know having a very small effect and being able to magnify it was sort of a new thing that allowed one to see a different sort of aspect of the universe and let one discover this kind of thing so you know we can expect that in the roulyard there are an infinite collection of new things we can discover there's there's in fact computational irreducibility kind of guarantees that there will be an infinite collection of kind of you know pockets of reducibility that can be discovered boy would it be fun to take a walk down the rouleiade and see what kind of stuff we find there you you write about alien intelligences yes i mean just these worlds yes well quite a bit the problem with these worlds is that we can't talk to them yes and and you know the thing is what i've kind of spent a lot of time doing of just studying computational systems seeing what they do what i now call ruleology kind of just the study of rules yeah and what they do you know you can kind of easily jump somewhere else in the ruleiad and start seeing what do these rules do yeah and what you says they they just they do what they do and there's no human connection so to speak do you think you know some some people are able to communicate with animals do you think you can become a whisper of these conditions trying that's what i've spent some part of my life doing have you have you heard and and are you at the risk of losing your mind sort of my favorite science discovery is this fact that these very simple programs can produce very complicated behavior yeah and that and that fact is kind of in a sense a whispering of something out in the computational universe that we didn't really know was there before i mean it's you know i it's like you know back in the nineteen eighties i was doing a bunch of work with some very very good mathematicians and they were like trying to pick away you know can we figure out what's going on in these computational systems and they they basically said look the math we have just doesn't get anywhere with this we're stuck there's nothing to say we have nothing to say and you know in a sense perhaps my main achievement at that time was to realize that the very fact that the the good mathematicians had nothing to say was itself a very interesting thing that was kind of a a sort of in some sense a whispering of a different part of the rouleid that one hadn't you know one wasn't was not accessible from what we knew in mathematics and so on does it make you sad that you're exploring some of these gigantic ideas and it feels like we're on the verge of breaking through to some very interesting discoveries and yet you're just a finite being that's going to die way too soon and that scan of your brain or your full body kinda shows that you're yeah it's just a bunch of meat it's just a bunch of meat yeah does that make you make you a little sad kind of a shame i mean i kinda like to see how all this stuff works out but i think the thing to realize you know it's an interesting sort of thought experiment you know you you say okay you know let's assume we can get cryonics to work and one day it will there will be one of these things that's kinda like chat gpt one day somebody will figure out you know how to get water from zero degrees centigrade down to you know minus forty four or something without it expanding and you know cryonics will be solved and you'll be able to like just you know put a pause in so to speak and you know kind of reappear a hundred years later or something and the thing though that i've kind of increasingly realized is that in a sense this this whole question of kind of the the sort of one is embedded in a certain moment in in time and you know kind of the things we care about now the things i care about now for example had i lived you know five hundred years ago many of the things i care about now it's like that's totally bizarre i mean it's nobody would care about that it's not even the thing one thinks about in the future the things that most people will think about you know one will be a strange relic mhmm of thinking about you know the kind of you know it might be or might have been a theologian thinking about you know how many angels fit on the head of a pin or something and that might have been the you know the big intellectual thing so i think it's a it's a but yeah it's a it's a you know it's one of these things where particularly you know i've had the i don't know good or bad fortune i'm not sure i think it's a it's a mixed thing that i've you know i've invented a bunch of things which i kind of can i think see well enough what's gonna happen that you know in fifty years a hundred years whatever assuming the world doesn't exterminate itself so to speak you know these are things that will be sort of centrally important to what's going on and it's kind of both it's both a good thing and a bad thing in terms of the passage of one's life i mean it's kind of like if everything i'd figured out was like okay i figured it out when i was twenty five years old and everybody says it's great and we're done and it's like okay but i'm gonna live another how many years and that's kind of it's all downhill from there in a sense it's it's better in some sense to to be able to you know there's there's it it sort of keeps things interesting that you know what i can see you know a lot of these things i mean it's kind of i i didn't expect you know chat gpt i didn't expect the kind of the sort of opening up of this idea of computation and computational language that's been made possible by this i didn't expect that this is this is ahead of schedule so to speak mhmm you know even though the sort of the the big kind of flowering of that stuff i'd sort of been assuming was another fifty years away so if it turns out it's a lot less time that's pretty cool because you know i'll hopefully get to see it so to speak rather than well i i think i speak for a very very large number of people in saying that i hope you stick around for a long time to come you've had so many interesting ideas you've created so many interesting systems over the years and i can see now that gpt and language models broke open the world even more i can't wait to see you at the forefront of this development what you what you do and yeah i've been a fan of yours like i've told you many many times since the very beginning i'm deeply grateful that you wrote a new kind of science that you explored this mystery of cellular automata and inspired this one little kid in me to to pursue artificial intelligence in all this beautiful world so steven thank you so much it's a huge honor to talk to you to to just be able to pick your mind and to explore all these ideas with you and please keep going and i can't wait to see what you come up with next and thank you for talking today we hit thanks we went past midnight we only did four and a half hours i mean we could probably go for four more but we'll save that till next time to this is round number four we'll i'm sure talk many more times thank you so much my pleasure thanks for listening to this conversation with stephen wolfram to support this podcast please check out our sponsors in the description and now let me leave you with some words from george cantor the essence of mathematics lies in its freedom thank you for listening and hope to see you next time